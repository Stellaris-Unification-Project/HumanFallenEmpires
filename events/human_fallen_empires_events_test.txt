#
namespace = human_fallen_empires_test

country_event = {
	id = human_fallen_empires_test.1
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		if = {
			limit = {
				is_difficulty > 0
			}
			log = "is_difficulty > 0"
		}
		if = {
			limit = {
				is_difficulty > 1
			}
			log = "is_difficulty > 1"
		}
		if = {
			limit = {
				is_difficulty > 2
			}
			log = "is_difficulty > 2"
		}
		if = {
			limit = {
				is_difficulty > 3
			}
			log = "is_difficulty > 3"
		}
		if = {
			limit = {
				is_difficulty > 4
			}
			log = "is_difficulty > 4"
		}
		if = {
			limit = {
				is_difficulty > 5
			}
			log = "is_difficulty > 5"
		}
		if = {
			limit = {
				is_difficulty > 6
			}
			log = "is_difficulty > 6"
		}
		if = {
			limit = {
				is_difficulty > 7
			}
			log = "is_difficulty > 7"
		}
		if = {
			limit = {
				is_difficulty > 8
			}
			log = "is_difficulty > 8"
		}
	}
}

country_event = {
	id = human_fallen_empires_test.2
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		random_owned_ship = {
			limit = {
				is_ship_class = shipclass_military
			}
			create_fleet = {
				effect = {
					create_ship = {
						name = random
						design = prevprev
						effect = {
							log = "[prevprev.GetName]"
						}
					}
					create_ship = {
						name = random
						random_existing_design = corvette
						effect = {
							log = "[prevprev.GetName]"
						}
					}
					set_owner = root
					set_location = root.capital_scope
				}
			}
		}
	}
}

country_event = {
	id = human_fallen_empires_test.3
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		random_list = {
			1 = {
				modifier = {
					factor = 0
					always = yes
					log = "1"
				}
			}
			1 = {
				modifier = {
					factor = 0
					always = yes
					log = "2"
				}
			}
		}
	}
}

country_event = {
	id = human_fallen_empires_test.5
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		capital_scope = {
			set_planet_entity = {
				entity = rotating_test_entity
			}
		}
	}
}

country_event = {
	id = human_fallen_empires_test.6
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		capital_scope = {
			set_planet_entity = {
				entity = shielded_planet_01_entity
			}
		}
	}
}

country_event = {
	id = human_fallen_empires_test.7
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		give_technology = { message = no tech = human_fallen_empires_tech_features_exodus }
		give_technology = { message = no tech = human_fallen_empires_tech_brainworm_reservation_0 }
		#give_technology = { message = no tech = human_fallen_empires_tech_brainworm_reservation_1 }
	}
}

country_event = {
	id = human_fallen_empires_test.8
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		capital_scope = {
			random_tile = {
				set_building = human_fallen_empires_building_assimilator
				remove_blocker = yes
			}
		}
	}
}

# country_event = {
	# id = human_fallen_empires_test.9
	# title = human_fallen_emires_test_string_0
	# desc = human_fallen_emires_test_string_1
	# picture = GFX_evt_alien_city
	# is_triggered_only = yes

	# immediate = {
		# set_name = human_fallen_emires_test_string_0
		# capital_scope = {
			# set_name = human_fallen_emires_test_string_1
			# create_fleet = {
				# name = human_fallen_emires_test_string_2
				# effect = {
					# set_owner = root
					# create_ship = {
						# name = "NAME_00110001"
						# design = "NAME_Beta"
						# graphical_culture = "fallen_empire_01"
					# }
					# set_location = prev
				# }
			# }
		# }
	# }

	# option = {
		# name = human_fallen_emires_test_string_2
	# }
# }

# country_event = {
# 	id = human_fallen_empires_test.10
# 	hide_window = yes
# 	is_triggered_only = yes

# 	immediate = {
# 		if = {
# 			limit = {
# 				ruler = {
# 					has_mandate = human_fallen_empires_agenda_discovery_hawks_faction
# 				}
# 			}
# 			add_minerals = 10
# 		}
# 	}
# }


country_event = {
	id = human_fallen_empires_test.11
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		capital_scope = {
			create_ambient_object = {
				type = human_fallen_empires_object_signal
				entity_offset_height = {
					min = -15
					max = -15
				}
			}
			# last_created_ambient_object = {
				# set_location = {
					# target = prev
					# distance = 0
					# angle = 0
				# }
			# }
		}
	}
}