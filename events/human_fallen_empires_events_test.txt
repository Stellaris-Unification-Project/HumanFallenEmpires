#
namespace = human_fallen_empires_test

planet_event = {
	id = human_fallen_empires_test.1
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		starbase = {
			log = "[this.GetName]"
		}
	}
}

country_event = {
	id = human_fallen_empires_test.2
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		ruler = {
			save_event_target_as = test2
			log = "[This.GetName]"
		}
		every_pool_leader = {
			exile_leader_as = test
			root = {
				set_leader = test
			}
		}
		log = "[This.Ruler.GetName]"
		#unassign_leader = this.leader
		log = "[This.Ruler.GetName]"
		event_target:test2 = {
			exile_leader_as = test3
		}

		#assign_leader = event_target:testtest
		log = "[test2.GetName]"
		log = "[This.Ruler.GetName]"
		#set_leader = test1
	}
}

country_event = {
	id = human_fallen_empires_test.3
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		random_list = {
			1 = {
				modifier = {
					factor = 0
					always = yes
					log = "1"
				}
			}
			1 = {
				modifier = {
					factor = 0
					always = yes
					log = "2"
				}
			}
		}
	}
}

country_event = {
	id = human_fallen_empires_test.5
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		random_owned_planet = {
			random_tile = {
				set_building = human_fallen_empires_building_thoth_module_food
			}
		}
	}
}

country_event = {
	id = human_fallen_empires_test.6
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		every_owned_ship = {
			limit = {
				exists = orbit
			}
			orbit.planet.spaceport = {
				log = "[Prev.GetName] [This.GetName] [Planet.GetName]"
			}
		}

		# every_owned_planet = {
		# 	limit = {
		# 	#	exists = orbit.spaceport
		# 	}
		# 	orbit.spaceport = {
		# 		log = "[Prev.GetName] [This.GetName] [Planet.GetName]"
		# 	}
		# 	spaceport = {
		# 		log = "[Prev.GetName] [This.GetName] [Planet.GetName]"
		# 	}
		# 	log = "true"
		# }
	}
}

country_event = {
	id = human_fallen_empires_test.7
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		give_technology = { message = no tech = tech_human_fallen_empires_features_exodus }
		give_technology = { message = no tech = tech_human_fallen_empires_brainworm_reservation_0 }
		#give_technology = { message = no tech = tech_human_fallen_empires_brainworm_reservation_1 }
	}
}

ship_event = {
	id = human_fallen_empires_test.8
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		is_ship_class = shipclass_colonizer
		exists = orbit.planet
	}

	immediate = {
		orbit.planet = {
			log = "[this.GetName] [root.species.GetName]"
			random_owned_pop = {
				limit = {
					is_exact_same_species = root.species
				}
				kill_pop = yes
			}
		}
	}
}

country_event = {
	id = human_fallen_empires_test.9
	title = human_fallen_emires_test_string_0
	desc = human_fallen_emires_test_string_1
	picture = GFX_evt_alien_city
	is_triggered_only = yes

	immediate = {
		set_name = human_fallen_emires_test_string_0
		capital_scope = {
			set_name = human_fallen_emires_test_string_1
			create_fleet = {
				name = human_fallen_emires_test_string_2
				effect = {
					set_owner = root
					create_ship = {
						name = "NAME_00110001"
						design = "NAME_Beta"
						graphical_culture = "fallen_empire_01"
					}
					set_location = prev
				}
			}
		}
	}

	option = {
		name = human_fallen_emires_test_string_2
	}
}
