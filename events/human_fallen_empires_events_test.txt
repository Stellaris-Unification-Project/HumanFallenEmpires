#
namespace = human_fallen_empires_test

country_event = {
	id = human_fallen_empires_test.1
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		if = {
			limit = {
				is_difficulty > 0
			}
			log = "is_difficulty > 0"
		}
		if = {
			limit = {
				is_difficulty > 1
			}
			log = "is_difficulty > 1"
		}
		if = {
			limit = {
				is_difficulty > 2
			}
			log = "is_difficulty > 2"
		}
		if = {
			limit = {
				is_difficulty > 3
			}
			log = "is_difficulty > 3"
		}
		if = {
			limit = {
				is_difficulty > 4
			}
			log = "is_difficulty > 4"
		}
		if = {
			limit = {
				is_difficulty > 5
			}
			log = "is_difficulty > 5"
		}
		if = {
			limit = {
				is_difficulty > 6
			}
			log = "is_difficulty > 6"
		}
		if = {
			limit = {
				is_difficulty > 7
			}
			log = "is_difficulty > 7"
		}
		if = {
			limit = {
				is_difficulty > 8
			}
			log = "is_difficulty > 8"
		}
	}
}

country_event = {
	id = human_fallen_empires_test.2
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		random_owned_ship = {
			limit = {
				is_ship_class = shipclass_military
			}
			create_fleet = {
				effect = {
					create_ship = {
						name = random
						design = prevprev
						effect = {
							log = "[prevprev.GetName]"
						}
					}
					create_ship = {
						name = random
						random_existing_design = corvette
						effect = {
							log = "[prevprev.GetName]"
						}
					}
					set_owner = root
					set_location = root.capital_scope
				}
			}
		}
	}
}

country_event = {
	id = human_fallen_empires_test.3
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		random_list = {
			1 = {
				modifier = {
					factor = 0
					always = yes
					log = "1"
				}
			}
			1 = {
				modifier = {
					factor = 0
					always = yes
					log = "2"
				}
			}
		}
	}
}

country_event = {
	id = human_fallen_empires_test.5
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		capital_scope = {
			set_planet_entity = {
				entity = rotating_test_entity
			}
		}
	}
}

fleet_event = {
	id = human_fallen_empires_test.6
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		solar_system = {
			random_neighbor_system = {
				random_system_planet = {
					root = {
						auto_move_to_planet = {
							target = prev
							clear_auto_move_on_arrival = yes
						}
					}
				}
			}
		}
	}
}

country_event = {
	id = human_fallen_empires_test.7
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		give_technology = { message = no tech = human_fallen_empires_tech_features_exodus }
		give_technology = { message = no tech = human_fallen_empires_tech_brainworm_reservation_0 }
		#give_technology = { message = no tech = human_fallen_empires_tech_brainworm_reservation_1 }
	}
}

country_event = {
	id = human_fallen_empires_test.8
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		clear_ethos = yes
		create_country = {
			type = default
			species = root
			ignore_initial_colony_error = yes
		}
		copy_ethos_and_authority = last_created_country
		# change_government = {
			# civics = random
		# }
	}
}

country_event = {
	id = human_fallen_empires_test.10
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		create_fleet = {
			effect = {
				set_owner = root
				create_ship = {
					name = test1
					design = "NAME_Outrider"
				}
				set_location = {
					target = root.capital_scope
					distance = 10
					angle = random
				}
				set_name = test2
			}
		}
	}
}

country_event = {
	id = human_fallen_empires_test.11
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		every_country = {
			limit ={
				exists = capital_scope
				not = {
					exists = home_planet
				}
			}
			species = {
				set_species_homeworld = prev.capital_scope
			}
		}
	}
}

country_event = {
	id = human_fallen_empires_test.12
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		every_system = {
			set_timed_star_flag = {
				flag = human_fallen_empires_test_star_flag
				days = 10
			}
		}
		set_spawn_system_batch = begin
		no_scope = {
			# spawn_system = {
				# min_distance >= 320
				# max_distance <= 321
				# min_orientation_angle = 330
				# max_orientation_angle = 330.1
				# initializer = human_fallen_empires_initializer_test_0
			# }
			human_fallen_empires_effect_test_1 = yes
		}
		every_system = {
			limit = {
				not = {
					has_star_flag = human_fallen_empires_test_star_flag
				}
			}
			human_fallen_empires_effect_add_hyperlanes = yes
		}
		# event_target:human_fallen_empires_initializer_test_0 = {
			# human_fallen_empires_effect_test_0 = yes
		# }
		# every_system = {
			# limit = {
				# has_star_flag = human_fallen_empires_test_star_flag
			# }
			# every_system = {
				# limit = {
					# not = {
						# has_star_flag = human_fallen_empires_test_star_flag
					# }
					# has_hyperlane_to = prev
				# }
				# remove_hyperlane = {
					# from = this
					# to = prev
				# }
			# }
		# }
		every_system = {
			limit = {
				not = {
					has_star_flag = human_fallen_empires_test_star_flag
				}
			}
			every_system = {
				limit = {
					has_hyperlane_to = prev
					not = {
						has_star_flag = human_fallen_empires_test_star_flag
					}
					distance = {
						source = prev
						min_distance >= 100
						type = euclidean
						#uses_bypass = no
					}
				}
				log = "removed [prev.GetName] [this.GetName]"
				remove_hyperlane = {
					from = this
					to = prev
				}
			}
		}
		set_spawn_system_batch = end
	}
}