#
namespace = human_fallen_empires_test

country_event = {
	id = human_fallen_empires_test.1
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		if = {
			limit = {
				is_difficulty > 0
			}
			log = "is_difficulty > 0"
		}
		if = {
			limit = {
				is_difficulty > 1
			}
			log = "is_difficulty > 1"
		}
		if = {
			limit = {
				is_difficulty > 2
			}
			log = "is_difficulty > 2"
		}
		if = {
			limit = {
				is_difficulty > 3
			}
			log = "is_difficulty > 3"
		}
		if = {
			limit = {
				is_difficulty > 4
			}
			log = "is_difficulty > 4"
		}
		if = {
			limit = {
				is_difficulty > 5
			}
			log = "is_difficulty > 5"
		}
		if = {
			limit = {
				is_difficulty > 6
			}
			log = "is_difficulty > 6"
		}
		if = {
			limit = {
				is_difficulty > 7
			}
			log = "is_difficulty > 7"
		}
		if = {
			limit = {
				is_difficulty > 8
			}
			log = "is_difficulty > 8"
		}
	}
}

country_event = {
	id = human_fallen_empires_test.2
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		random_owned_ship = {
			limit = {
				is_ship_class = shipclass_military
			}
			create_fleet = {
				effect = {
					create_ship = {
						name = random
						design = prevprev
						effect = {
							log = "[prevprev.GetName]"
						}
					}
					create_ship = {
						name = random
						random_existing_design = corvette
						effect = {
							log = "[prevprev.GetName]"
						}
					}
					set_owner = root
					set_location = root.capital_scope
				}
			}
		}
	}
}

country_event = {
	id = human_fallen_empires_test.3
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		random_list = {
			1 = {
				modifier = {
					factor = 0
					always = yes
					log = "1"
				}
			}
			1 = {
				modifier = {
					factor = 0
					always = yes
					log = "2"
				}
			}
		}
	}
}

country_event = {
	id = human_fallen_empires_test.5
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		capital_scope.solar_system = {
			every_system_planet = {
				remove_planet = yes
			}
		}
	}
}
country_event = {
    id = human_fallen_empires_test.6
    hide_window = yes
    is_triggered_only = yes

    immediate = {
        # tags the first 5 non-outpost bases as key bases
        if = {
            limit = { check_variable = { which = jkai_keybasecount value < 5 } }
            every_system_within_border = {
                limit = { starbase = { has_starbase_size > starbase_outpost } }
                starbase = { set_variable = { which = jkai_keybase value = 1 } }
                root = { change_variable = { which = jkai_keybasecount value = 1 } }
                log = "jkai_gamecontrol.5; setting key base for country [Root.GetName]; [This.GetName]"
            }
        }
        # tags the first 5 colonies as key colonies (if they meet the selection criteria)
        if = {
            limit = { check_variable = { which = jkai_keycolonycount value < 5 } }
            random_owned_pop = {
                limit = { has_citizenship_type = { type = citizenship_full country = root } }
                log = "jkai_gamecontrol.5; found pop [Root.GetName]; [This.GetName]"
                save_event_target_as = saved_pop
            }
            every_owned_planet  = {
                limit = {
                    is_colony = yes
                    planet_size > 12
                    habitability = { who = event_target:saved_pop value > 0.70 }
                }
                set_variable = { which = jkai_keycolony value = 1 }
                root = { change_variable = { which = jkai_keycolonycount value = 1 } }
                log = "jkai_gamecontrol.5; setting key colony for country [Root.GetName]; [This.GetName]"
            }
        }
    }
}

country_event = {
	id = human_fallen_empires_test.7
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		give_technology = { message = no tech = human_fallen_empires_tech_features_exodus }
		give_technology = { message = no tech = human_fallen_empires_tech_brainworm_reservation_0 }
		#give_technology = { message = no tech = human_fallen_empires_tech_brainworm_reservation_1 }
	}
}

country_event = {
	id = human_fallen_empires_test.8
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		capital_scope = {
			random_owned_pop = {
				create_country = {
					type = default
					species = this.species
					ignore_initial_colony_error = yes
					effect = {
						set_player = root
					}
				}
			}
			set_owner = last_created_country
		}
	}
}

event = {
	id = human_fallen_empires_test.10
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		random_system = {
			limit = {
				has_star_flag = human_fallen_empires_features_sanctuary_system
			}
			random_system = {
				limit = {
					NOR = {
						has_natural_wormhole = yes
						starting_system = yes
						has_star_flag = empire_cluster
					}
					distance = {
						source = prev
						min_distance >= 500
					}
				}
				log = "1"
				spawn_natural_wormhole = {
					bypass_type = wormhole
					random_pos = yes
					orbit_angle = 360
				}
				prev = { # done this way to ensure we don't spawn "orphan" wormholes (wormholes that aren't linked to anything)
					spawn_natural_wormhole = {
						bypass_type = wormhole
						random_pos = yes
						orbit_angle = 360
					}
				}
				link_wormholes = prev
			}
		}
	}
}

country_event = {
	id = human_fallen_empires_test.11
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		change_government = {
			authority = auth_machine_intelligence
		}
	}
}

country_event = {
	id = human_fallen_empires_test.12
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		every_system = {
			set_timed_star_flag = {
				flag = human_fallen_empires_test_star_flag
				days = 10
			}
		}
		set_spawn_system_batch = begin
		no_scope = {
			# spawn_system = {
				# min_distance >= 320
				# max_distance <= 321
				# min_orientation_angle = 330
				# max_orientation_angle = 330.1
				# initializer = human_fallen_empires_initializer_test_0
			# }
			human_fallen_empires_effect_test_1 = yes
		}
		# every_system = {
			# limit = {
				# not = {
					# has_star_flag = human_fallen_empires_test_star_flag
				# }
			# }
			# human_fallen_empires_effect_add_hyperlanes = yes
		# }
		# event_target:human_fallen_empires_initializer_test_0 = {
			# human_fallen_empires_effect_test_0 = yes
		# }
		# every_system = {
			# limit = {
				# has_star_flag = human_fallen_empires_test_star_flag
			# }
			# every_system = {
				# limit = {
					# not = {
						# has_star_flag = human_fallen_empires_test_star_flag
					# }
					# has_hyperlane_to = prev
				# }
				# remove_hyperlane = {
					# from = this
					# to = prev
				# }
			# }
		# }
		# every_system = {
			# limit = {
				# not = {
					# has_star_flag = human_fallen_empires_test_star_flag
				# }
			# }
			# every_system = {
				# limit = {
					# has_hyperlane_to = prev
					# not = {
						# has_star_flag = human_fallen_empires_test_star_flag
					# }
					# distance = {
						# source = prev
						# min_distance >= 100
						# type = euclidean
						# #uses_bypass = no
					# }
				# }
				# log = "removed [prev.GetName] [this.GetName]"
				# remove_hyperlane = {
					# from = this
					# to = prev
				# }
			# }
		# }
		set_spawn_system_batch = end
	}
}