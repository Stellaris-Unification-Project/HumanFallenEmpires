namespace = hfe_brainworm

# start by civic 0
planet_event = {
	id = hfe_brainworm.0
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		owner = {
			has_authority = hfe_auth_brainworm
		}
	}

	immediate = {
		owner = {
			set_country_flag = custom_start_screen
		}
		while = {
			count = 10
			create_pop = {
				species = owner
			}
			last_created_pop = {
				modify_species = {
					remove_trait = hfe_species_trait_brainworm
				}
			}
		}
		if = {
			limit = {
				owner = {
					has_valid_civic = hfe_civic_brainworm_paternalist
				}
			}
			add_building = hfe_building_brainworm_reservation_paternalist
		}
		else_if = {
			limit = {
				owner = {
					has_valid_civic = hfe_civic_brainworm_evil
				}
			}
			add_building = hfe_building_brainworm_reservation_evil
		}
	}
}

# functional events 1 - 50
# kick events by pop by on_pop_migration_end
# A pop has finished migrating to another planet
# Root = pop
# From = Tile on the new planet
# FromFrom = Tile on the old planet
pop_event = {
	id = hfe_brainworm.1
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		exists = planet
		planet = {
			hfe_trigger_brainworm_planet_for_assimilation = yes
		}
	}

	immediate = {
		#log = "worm migrate to [Planet.GetName]"
		if = {
			limit = {
				exists = from.owner
				exists = fromfrom.owner
				fromfrom.owner = {
					hfe_trigger_brainworm_country = yes
				}
				not = {
					fromfrom.owner = {
						is_country = from.owner
					}
				}
				hfe_trigger_is_brainworm = yes
			}
			fromfrom.owner = {
				# notification for worm owner
				country_event = {
					id = hfe_brainworm.50
				}
			}
		}
		planet = {
			# assimilate all
			planet_event = {
				id = hfe_brainworm.4
				days = 90
				random = 30
			}
			# change owner if needed
			planet_event = {
				id = hfe_brainworm.5
			}
		}
	}
}

# kick events by pop by on_pop_resettled on_pop_birth
pop_event = {
	id = hfe_brainworm.2
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		exists = planet
		planet = {
			hfe_trigger_brainworm_planet_for_assimilation = yes
		}
	}

	immediate = {
		planet = {
			# assimilate all
			planet_event = {
				id = hfe_brainworm.4
				days = 90
				random = 30
			}
			# change owner if needed
			planet_event = {
				id = hfe_brainworm.5
			}
		}
	}
}

# kick events by planet by on actions
planet_event = {
	id = hfe_brainworm.3
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		exists = owner
		hfe_trigger_brainworm_planet_for_assimilation = yes
	}

	immediate = {
		# assimilate all
		planet_event = {
			id = hfe_brainworm.4
			days = 90
			random = 30
		}
		# change owner if needed
		planet_event = {
			id = hfe_brainworm.5
		}
	}
}

# assimilate someone on planet 4
planet_event = {
	id = hfe_brainworm.4
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		hfe_trigger_brainworm_planet_for_assimilation = yes
		exists = owner
		owner = {
			not = {
				has_policy_flag = hfe_policies_brainworm_0.1
			}
		}
	}

	immediate = {
		owner = {
			if = {
				limit = {
					hfe_trigger_brainworm_country = no
				}
				random_list = {
					90 = {
					}
					10 = {
						set_country_flag = hfe_brainworm_discovered
						# notification for owner
						country_event = {
							id = hfe_brainworm.51
						}
						# notification for brainworms
						every_country = {
							limit = {
								hfe_trigger_brainworm_country = yes
							}
							country_event = {
								id = hfe_brainworm.52
							}
						}
					}
				}
			}
		}
		random_owned_pop = {
			limit = {
				hfe_trigger_can_be_brainworm = yes
			}
			modify_species = {
				add_trait = hfe_species_trait_brainworm
			}
			if = {
				limit = {
					has_trait = trait_hive_mind
				}
				modify_species = {
					remove_trait = trait_hive_mind
				}
				add_modifier = {
					modifier = hfe_brainworm_former_hive
					days = 3650
				}
			}
			# к сожалению создает спам в экране рас
			# root = {
			# 	random_owned_pop = {
			# 		limit = {
			# 			hfe_trigger_is_brainworm = yes
			# 			not = {
			# 				is_pop = prevprev
			# 			}
			# 		}
			# 		prevprev.species = {
			# 			set_species_identity = prev.species
			# 		}
			# 	}
			# }
			remove_culture_shock = yes
			remove_modifier = pop_recently_conquered
			remove_modifier = recent_refugee
		}
		# assimilate again
		planet_event = {
			id = hfe_brainworm.4
			days = 90
			random = 60
		}
		# change owner again
		planet_event = {
			id = hfe_brainworm.5
			days = 1
		}
	}
}

# add planet to brainworm empire 5
planet_event = {
	id = hfe_brainworm.5
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		exists = owner
		owner = {
			hfe_trigger_brainworm_country = no
			not = {
				is_country_type = hfe_pirate
			}
		}
		any_owned_pop = {
			hfe_trigger_is_brainworm = yes
		}
		pop_percentage = {
			percentage > 0.8
			limit = {
				or = {
					hfe_trigger_is_brainworm = yes
					is_non_menial_laborer = yes
				}
			}
		}
	}

	immediate = {
		log = "worm gain planet [this.GetName] in [solar_system.GetName]"
		if = {
			limit = {
				any_playable_country = {
					hfe_trigger_brainworm_country = yes
				}
			}
			# может быть стоит искать ближайшую империю
			random_playable_country = {
				limit = {
					hfe_trigger_brainworm_country = yes
				}
				save_event_target_as = hfe_brainworm_country
			}
		}
		else = {
			random_owned_pop = {
				limit = {
					hfe_trigger_is_brainworm_species = yes
				}
				create_country = {
					type = default
					species = species #check it
					effect = {
						hfe_effect_gov_fix = yes
						save_event_target_as = hfe_brainworm_country
					}
				}
			}
		}
		# notification for old owner
		planet_event = {
			id = hfe_brainworm.53
		}
		starbase = {
			set_owner = event_target:hfe_brainworm_country
		}
		# need to test it
		solar_system = {
			add_claims = {
				who = root.owner
			}
		}
		set_owner = event_target:hfe_brainworm_country
		#set_controller = event_target:hfe_brainworm_country
		# notification for new owner
		planet_event = {
			id = hfe_brainworm.54
		}
	}
}

# change leader species
country_event = {
	id = hfe_brainworm.6
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		hfe_trigger_brainworm_country = yes
		exists = from.species
		from.species = {
			hfe_trigger_non_brainworm_species = yes
		}
	}

	immediate = {
		from = {
			change_species = root
		}
	}
}

# notifications 50 - 100
# pop migrated 50
country_event = {
	id = hfe_brainworm.50
	title = hfe_brainworm.50.name
	desc = hfe_brainworm.50.desc
	picture = GFX_evt_hfe_brainworm
	location = from
	is_triggered_only = yes

	trigger = {
		is_ai = no
	}

	option = {
		name = hfe_brainworm.50.0
	}
}

# know brain worm 51
country_event = {
	id = hfe_brainworm.51
	title = hfe_brainworm.51.name
	desc = hfe_brainworm.51.desc
	picture = GFX_evt_hfe_brainworm
	location = from
	is_triggered_only = yes

	trigger = {
		is_ai = no
	}

	option = {
		name = hfe_brainworm.51.0
	}
	option = {
		name = hfe_brainworm.51.1
		trigger = {
			always = no
			exists = ruler
		}
		ruler = {
			modify_species = {
				add_trait = hfe_species_trait_brainworm
				change_scoped_species = no
			}
		}
	}
}

# know brain worm notification for worms 52
country_event = {
	id = hfe_brainworm.52
	title = hfe_brainworm.52.name
	desc = hfe_brainworm.52.desc
	picture = GFX_evt_hfe_brainworm
	location = from
	is_triggered_only = yes

	trigger = {
		is_ai = no
	}

	option = {
		name = hfe_brainworm.52.0
	}
}

# planet lose 53
planet_event = {
	id = hfe_brainworm.53
	title = hfe_brainworm.53.name
	desc = hfe_brainworm.53.desc
	picture = GFX_evt_hfe_brainworm
	location = root
	is_triggered_only = yes

	trigger = {
		exists = owner
		owner = {
			is_ai = no
		}
	}

	option = {
		name = hfe_brainworm.53.0
	}
}

# planet gain 54
planet_event = {
	id = hfe_brainworm.54
	title = hfe_brainworm.54.name
	desc = hfe_brainworm.54.desc
	picture = GFX_evt_hfe_brainworm
	location = root
	is_triggered_only = yes

	trigger = {
		exists = owner
	}

	option = {
		name = hfe_brainworm.54.0
		owner = {
			hfe_effect_add_unity.1 = yes
		}
	}
}

# this: capital planet
# from: secondary species
planet_event = {
	id = hfe_brainworm.100
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		owner = {
			has_valid_civic = hfe_civic_brainworm_syncretic
		}
	}

	immediate = {
		# TODO
		from = {
			save_event_target_as = secondary_species
			set_species_flag = hfe_forever_slave@root.owner
			set_citizenship_type = {
				country = root.owner
				type = citizenship_slavery
			}
		}
		while = {
			count = 4
			create_pop = {
				species = event_target:secondary_species
			}
		}
	}
}

# brainworm_reservation civic on_game_start_country
country_event = {
	id = hfe_brainworm.101
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		has_valid_civic = hfe_civic_brainworm_reservation
	}

	immediate = {
		give_technology = {
			message = no
			tech = hfe_tech_brainworm_reservation_0
		}
	}
}
