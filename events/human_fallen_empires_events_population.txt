namespace = human_fallen_empires_population

# set modifier on planet by pop by on actions
pop_event = {
	id = human_fallen_empires_population.0
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		human_fallen_empires_trigger_population_enabled = yes
		exists = planet
	}

	immediate = {
		planet = {
			planet_event = {
				id = human_fallen_empires_population.1
			}
		}
	}
}

# set modifier on planet by on actions
planet_event = {
	id = human_fallen_empires_population.1
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		human_fallen_empires_trigger_population_enabled = yes
	}

	immediate = {
		planet_event = {
			id = human_fallen_empires_population.2
		}
		planet_event = {
			id = human_fallen_empires_population.3
		}
		planet_event = {
			id = human_fallen_empires_population.4
		}
		planet_event = {
			id = human_fallen_empires_population.5
		}
	}
}

# set overpopulated modifier on planet
planet_event = {
	id = human_fallen_empires_population.2
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		free_pop_tiles < 2
		not = {
			has_modifier = human_fallen_empires_population_overpopulated_planet
		}
		exists = owner
		owner = {
			is_country_type = default
		}
		pop_percentage = {
			percentage > 0.5
			limit = {
				is_robot_pop = no
			}
		}
	}

	immediate = {
		add_modifier = {
			modifier = human_fallen_empires_population_overpopulated_planet
			days = -1
		}
	}
}

# remove overpopulated modifier on planet
planet_event = {
	id = human_fallen_empires_population.3
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		free_pop_tiles > 1
		has_modifier = human_fallen_empires_population_overpopulated_planet
	}

	immediate = {
		remove_modifier = human_fallen_empires_population_overpopulated_planet
	}
}

# set unpopulated modifier on planet
planet_event = {
	id = human_fallen_empires_population.4
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		free_pop_tiles > 4
		not = {
			has_modifier = human_fallen_empires_population_unpopulated_planet
		}
		exists = owner
		owner = {
			is_country_type = default
			human_fallen_empires_trigger_is_hive = no
		}
	}

	immediate = {
		add_modifier = {
			modifier = human_fallen_empires_population_unpopulated_planet
			days = -1
		}
	}
}

# remove unpopulated modifier on planet
planet_event = {
	id = human_fallen_empires_population.5
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		free_pop_tiles < 5
		has_modifier = human_fallen_empires_population_unpopulated_planet
	}

	immediate = {
		remove_modifier = human_fallen_empires_population_unpopulated_planet
	}
}

# remove pop from planet after colony ship build
ship_event = {
	id = human_fallen_empires_population.6
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		human_fallen_empires_trigger_population_enabled = yes
		is_ship_class = shipclass_colonizer
	}

	immediate = {
		if = {
			limit = {
				exists = orbit.planet
			}
			orbit.planet = {
				random_owned_pop = {
					limit = {
						is_exact_same_species = root
						is_growing = no
					}
					kill_pop = yes
				}
			}
		}
		else = {
			solar_system = {
				random_system_planet = {
					limit = {
						exists = owner
						any_owned_pop = {
							is_exact_same_species = root
							is_growing = no
						}
					}
					random_owned_pop = {
						limit = {
							is_exact_same_species = root
							is_growing = no
						}
						kill_pop = yes
					}
				}
			}
		}
	}
}

# remove modifiers on_planet_ownerless
planet_event = {
	id = human_fallen_empires_population.7
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		or = {
			has_modifier = human_fallen_empires_population_unpopulated_planet
			has_modifier = human_fallen_empires_population_overpopulated_planet
		}
	}

	immediate = {
		remove_modifier = human_fallen_empires_population_unpopulated_planet
		remove_modifier = human_fallen_empires_population_overpopulated_planet
	}
}

# remove pop_was_enslaved modifier
pop_event = {
	id = human_fallen_empires_population.11
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		human_fallen_empires_trigger_population_enabled = yes
		or = {
			has_ethic = ethic_authoritarian
			and = {
				has_ethic = ethic_spiritualist
				exists = owner
				owner = {
					has_spiritualist_government = yes
				}
			}
		}
	}

	immediate = {
		remove_modifier = pop_was_enslaved
	}
}

# change main species 50
country_event = {
	id = human_fallen_empires_population.50
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		num_pops > 0
		not = {
			any_owned_pop_species = {
				is_exact_same_species = root
			}
		}
	}

	immediate = {
		species = {
			save_event_target_as = human_fallen_empires_population_old_species
		}
		random_owned_pop_species = {
			limit = {
				is_same_species = root
				root = {
					pop_percentage = {
						percentage > 0.5
						limit = {
							is_exact_same_species = prev
							is_growing = no
						}
					}
				}
			}
			save_event_target_as = human_fallen_empires_population_species
		}
		if = {
			limit = {
				not = {
					exists = event_target:human_fallen_empires_population_species
				}
			}
			random_owned_pop_species = {
				limit = {
					is_same_species = root
					root = {
						pop_percentage = {
							percentage > 0.4
							limit = {
								is_exact_same_species = prev
								is_growing = no
							}
						}
					}
				}
				save_event_target_as = human_fallen_empires_population_species
			}
		}
		if = {
			limit = {
				not = {
					exists = event_target:human_fallen_empires_population_species
				}
			}
			random_owned_pop_species = {
				limit = {
					is_same_species = root
					root = {
						pop_percentage = {
							percentage > 0.3
							limit = {
								is_exact_same_species = prev
								is_growing = no
							}
						}
					}
				}
				save_event_target_as = human_fallen_empires_population_species
			}
		}
		if = {
			limit = {
				not = {
					exists = event_target:human_fallen_empires_population_species
				}
			}
			random_owned_pop_species = {
				limit = {
					is_same_species = root
					root = {
						pop_percentage = {
							percentage > 0.2
							limit = {
								is_exact_same_species = prev
								is_growing = no
							}
						}
					}
				}
				save_event_target_as = human_fallen_empires_population_species
			}
		}
		if = {
			limit = {
				not = {
					exists = event_target:human_fallen_empires_population_species
				}
			}
			random_owned_pop_species = {
				limit = {
					is_same_species = root
					root = {
						pop_percentage = {
							percentage > 0.1
							limit = {
								is_exact_same_species = prev
								is_growing = no
							}
						}
					}
				}
				save_event_target_as = human_fallen_empires_population_species
			}
		}
		if = {
			limit = {
				not = {
					exists = event_target:human_fallen_empires_population_species
				}
			}
			random_owned_pop_species = {
				limit = {
					is_same_species = root
				}
				save_event_target_as = human_fallen_empires_population_species
			}
		}
		if = {
			limit = {
				not = {
					exists = event_target:human_fallen_empires_population_species
				}
			}
			random_owned_pop_species = {
				limit = {
					root = {
						pop_percentage = {
							percentage > 0.5
							limit = {
								is_exact_same_species = prev
								is_growing = no
							}
						}
					}
				}
				save_event_target_as = human_fallen_empires_population_species
			}
		}
		if = {
			limit = {
				not = {
					exists = event_target:human_fallen_empires_population_species
				}
			}
			random_owned_pop_species = {
				limit = {
					root = {
						pop_percentage = {
							percentage > 0.4
							limit = {
								is_exact_same_species = prev
								is_growing = no
							}
						}
					}
				}
				save_event_target_as = human_fallen_empires_population_species
			}
		}
		if = {
			limit = {
				not = {
					exists = event_target:human_fallen_empires_population_species
				}
			}
			random_owned_pop_species = {
				limit = {
					root = {
						pop_percentage = {
							percentage > 0.3
							limit = {
								is_exact_same_species = prev
								is_growing = no
							}
						}
					}
				}
				save_event_target_as = human_fallen_empires_population_species
			}
		}
		if = {
			limit = {
				not = {
					exists = event_target:human_fallen_empires_population_species
				}
			}
			random_owned_pop_species = {
				limit = {
					root = {
						pop_percentage = {
							percentage > 0.2
							limit = {
								is_exact_same_species = prev
								is_growing = no
							}
						}
					}
				}
				save_event_target_as = human_fallen_empires_population_species
			}
		}
		if = {
			limit = {
				not = {
					exists = event_target:human_fallen_empires_population_species
				}
			}
			random_owned_pop_species = {
				limit = {
					root = {
						pop_percentage = {
							percentage > 0.1
							limit = {
								is_exact_same_species = prev
								is_growing = no
							}
						}
					}
				}
				save_event_target_as = human_fallen_empires_population_species
			}
		}
		if = {
			limit = {
				not = {
					exists = event_target:human_fallen_empires_population_species
				}
			}
			random_owned_pop_species = {
				save_event_target_as = human_fallen_empires_population_species
			}
		}
		# flags for texts
		if = {
			limit = {
				event_target:human_fallen_empires_population_species = {
					is_same_species = root
				}
			}
			set_timed_country_flag = {
				flag = human_fallen_empires_population.50_subspecies
				days = 10
			}
		}
		else_if = {
			limit = {
				not = {
					has_authority = auth_machine_intelligence
				}
				event_target:human_fallen_empires_population_species = {
					human_fallen_empires_trigger_non_sapient_robot = yes
				}
			}
			set_timed_country_flag = {
				flag = human_fallen_empires_population.50_switch_to_robot_hive
				days = 10
			}
		}
		else_if = {
			limit = {
				not = {
					has_authority = auth_hive_mind
				}
				event_target:human_fallen_empires_population_species = {
					has_trait = trait_hive_mind
				}
			}
			set_timed_country_flag = {
				flag = human_fallen_empires_population.50_switch_to_bio_hive
				days = 10
			}
		}
		else_if = {
			limit = {
				human_fallen_empires_trigger_is_hive = yes
				human_fallen_empires_trigger_non_sapient = no
			}
			set_timed_country_flag = {
				flag = human_fallen_empires_population.50_switch_from_hive
				days = 10
			}
			if = {
				limit = {
					has_valid_civic = civic_machine_servitor
				}
				set_timed_country_flag = {
					flag = human_fallen_empires_population.50_was_servitor
					days = 10
				}
			}
		}
		else_if = {
			limit = {
				event_target:human_fallen_empires_population_species = {
					or = {
						has_citizenship_type = {
							type = citizenship_full
							country = prev
						}
						has_citizenship_type = {
							type = citizenship_caste_system
							country = prev
						}
					}
				}
			}
			set_timed_country_flag = {
				flag = human_fallen_empires_population.50_citizenship_full
				days = 10
			}
		}
		else_if = {
			limit = {
				event_target:human_fallen_empires_population_species = {
					has_citizenship_type = {
						type = citizenship_assimilation
						country = prev
					}
				}
			}
			set_timed_country_flag = {
				flag = human_fallen_empires_population.50_citizenship_assimilation
				days = 10
			}
		}
		else_if = {
			limit = {
				event_target:human_fallen_empires_population_species = {
					or = {
						has_citizenship_type = {
							type = citizenship_limited
							country = prev
						}
						has_citizenship_type = {
							type = citizenship_caste_system_limited
							country = prev
						}
					}
				}
			}
			set_timed_country_flag = {
				flag = human_fallen_empires_population.50_citizenship_limited
				days = 10
			}
		}
		else_if = {
			limit = {
				event_target:human_fallen_empires_population_species = {
					has_citizenship_type = {
						type = citizenship_slavery
						country = prev
					}
				}
			}
			set_timed_country_flag = {
				flag = human_fallen_empires_population.50_citizenship_slavery
				days = 10
			}
		}
		else_if = {
			limit = {
				event_target:human_fallen_empires_population_species = {
					has_citizenship_type = {
						type = citizenship_purge
						country = prev
					}
				}
			}
			set_timed_country_flag = {
				flag = human_fallen_empires_population.50_citizenship_purge
				days = 10
			}
		}
		# change species and other stuff if needed
		change_dominant_species = {
			species = event_target:human_fallen_empires_population_species
			#change_all = no
		}
		# random ethics civics if purifer
		if = {
			limit = {
				has_valid_civic = civic_fanatic_purifiers
				not = {
					has_country_flag = human_fallen_empires_population.50_subspecies
				}
			}
			human_fallen_empires_effect_gov_reset_non_hive = yes
			set_timed_country_flag = {
				flag = human_fallen_empires_population.50_was_purifiers
				days = 10
			}
		}
		human_fallen_empires_effect_gov_fix_from_hive = yes
		human_fallen_empires_effect_gov_fix_to_hive = yes
		log = "changing main species for [this.GetName]"
		country_event = {
			id = human_fallen_empires_population.52
		}
		every_relation = {
			country_event = {
				id = human_fallen_empires_population.52
			}
		}
	}
}

# on_modification_complete
country_event = {
	id = human_fallen_empires_population.51
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		country_event = {
			id = human_fallen_empires_population.50
		}
	}
}

country_event = {
	id = human_fallen_empires_population.52
	title = human_fallen_empires_population.52.name
	desc = {
		trigger = {
			# non hives
			# subspecies
			success_text = {
				text = human_fallen_empires_population.52.desc.0.0
				from = {
					has_country_flag = human_fallen_empires_population.50_subspecies
				}
			}
			success_text = {
				text = human_fallen_empires_population.52.desc.0.1
				is_country = from
				has_country_flag = human_fallen_empires_population.50_subspecies
			}
			success_text = {
				text = human_fallen_empires_population.52.desc.0.2
				not = {
					is_country = from
				}
				from = {
					has_country_flag = human_fallen_empires_population.50_subspecies
				}
			}
			# new species is citizen
			success_text = {
				text = human_fallen_empires_population.52.desc.1.0.0
				is_country = from
				has_country_flag = human_fallen_empires_population.50_citizenship_full
				not = {
					has_trait = trait_robotic_3
				}
			}
			success_text = {
				text = human_fallen_empires_population.52.desc.1.0.1
				is_country = from
				has_country_flag = human_fallen_empires_population.50_citizenship_full
				has_trait = trait_robotic_3
			}
			success_text = {
				text = human_fallen_empires_population.52.desc.1.0.2
				is_country = from
				has_country_flag = human_fallen_empires_population.50_citizenship_full
				has_trait = trait_robotic_3
				has_technology = tech_synthetic_workers
			}
			success_text = {
				text = human_fallen_empires_population.52.desc.1.0.3
				is_country = from
				has_country_flag = human_fallen_empires_population.50_citizenship_full
				has_trait = trait_robotic_3
				not = {
					has_technology = tech_synthetic_workers
				}
			}
			success_text = {
				text = human_fallen_empires_population.52.desc.1.1.0
				not = {
					is_country = from
				}
				from = {
					has_country_flag = human_fallen_empires_population.50_citizenship_full
					not = {
						has_trait = trait_robotic_3
					}
				}
			}
			success_text = {
				text = human_fallen_empires_population.52.desc.1.1.1
				not = {
					is_country = from
				}
				from = {
					has_country_flag = human_fallen_empires_population.50_citizenship_full
					has_trait = trait_robotic_3
				}
			}
			# new species assimilated
			success_text = {
				text = human_fallen_empires_population.52.desc.2.0
				is_country = from
				has_country_flag = human_fallen_empires_population.50_citizenship_assimilation
			}
			success_text = {
				text = human_fallen_empires_population.52.desc.2.1
				not = {
					is_country = from
				}
				from = {
					has_country_flag = human_fallen_empires_population.50_citizenship_assimilation
				}
			}
			# new species is non citizen
			success_text = {
				text = human_fallen_empires_population.52.desc.3.0
				is_country = from
				has_country_flag = human_fallen_empires_population.50_citizenship_limited
			}
			success_text = {
				text = human_fallen_empires_population.52.desc.3.1
				not = {
					is_country = from
				}
				from = {
					has_country_flag = human_fallen_empires_population.50_citizenship_limited
				}
			}
			# new species is slave
			success_text = {
				text = human_fallen_empires_population.52.desc.4.0.0
				is_country = from
				has_country_flag = human_fallen_empires_population.50_citizenship_slavery
				not = {
					has_trait = trait_robotic_3
				}
			}
			success_text = {
				text = human_fallen_empires_population.52.desc.4.0.1
				is_country = from
				has_country_flag = human_fallen_empires_population.50_citizenship_slavery
				has_trait = trait_robotic_3
				not = {
					has_policy_flag = ai_outlawed
				}
			}
			success_text = {
				text = human_fallen_empires_population.52.desc.4.0.2
				is_country = from
				has_country_flag = human_fallen_empires_population.50_citizenship_slavery
				has_trait = trait_robotic_3
				has_policy_flag = ai_outlawed
			}
			success_text = {
				text = human_fallen_empires_population.52.desc.4.1.0
				not = {
					is_country = from
				}
				from = {
					has_country_flag = human_fallen_empires_population.50_citizenship_slavery
					not = {
						has_trait = trait_robotic_3
					}
				}
			}
			success_text = {
				text = human_fallen_empires_population.52.desc.4.1.1
				not = {
					is_country = from
				}
				from = {
					has_country_flag = human_fallen_empires_population.50_citizenship_slavery
					has_trait = trait_robotic_3
					not = {
						has_policy_flag = ai_outlawed
					}
				}
			}
			success_text = {
				text = human_fallen_empires_population.52.desc.4.1.2
				not = {
					is_country = from
				}
				from = {
					has_country_flag = human_fallen_empires_population.50_citizenship_slavery
					has_trait = trait_robotic_3
					has_policy_flag = ai_outlawed
				}
			}
			# new species is purged
			success_text = {
				text = human_fallen_empires_population.52.desc.5.0.0
				is_country = from
				has_country_flag = human_fallen_empires_population.50_citizenship_purge
				not = {
					has_trait = trait_robotic_3
				}
			}
			success_text = {
				text = human_fallen_empires_population.52.desc.5.0.1
				is_country = from
				has_country_flag = human_fallen_empires_population.50_citizenship_purge
				has_trait = trait_robotic_3
			}
			success_text = {
				text = human_fallen_empires_population.52.desc.5.1.0
				not = {
					is_country = from
				}
				from = {
					has_country_flag = human_fallen_empires_population.50_citizenship_purge
					nor = {
						has_country_flag = human_fallen_empires_population.50_was_purifiers
						has_trait = trait_robotic_3
					}
				}
			}
			success_text = {
				text = human_fallen_empires_population.52.desc.5.1.1
				not = {
					is_country = from
				}
				from = {
					has_country_flag = human_fallen_empires_population.50_citizenship_purge
					has_country_flag = human_fallen_empires_population.50_was_purifiers
					not = {
						has_trait = trait_robotic_3
					}
				}
			}
			success_text = {
				text = human_fallen_empires_population.52.desc.5.1.2
				not = {
					is_country = from
				}
				from = {
					has_country_flag = human_fallen_empires_population.50_citizenship_purge
					has_trait = trait_robotic_3
				}
			}
			# became robo hive
			success_text = {
				text = human_fallen_empires_population.52.desc.6.0.0
				is_country = from
				has_country_flag = human_fallen_empires_population.50_switch_to_robot_hive
				nor = {
					has_valid_civic = civic_machine_servitor
					has_valid_civic = civic_machine_assimilator
					has_valid_civic = civic_machine_terminator
				}
			}
			success_text = {
				text = human_fallen_empires_population.52.desc.6.0.1.0
				is_country = from
				has_country_flag = human_fallen_empires_population.50_switch_to_robot_hive
				has_valid_civic = civic_machine_servitor
			}
			success_text = {
				text = human_fallen_empires_population.52.desc.6.0.1.1
				is_country = from
				has_country_flag = human_fallen_empires_population.50_switch_to_robot_hive
				has_valid_civic = civic_machine_servitor
				exists = event_target:human_fallen_empires_event_target_5
			}
			success_text = {
				text = human_fallen_empires_population.52.desc.6.0.2.0
				is_country = from
				has_country_flag = human_fallen_empires_population.50_switch_to_robot_hive
				has_valid_civic = civic_machine_assimilator
			}
			success_text = {
				text = human_fallen_empires_population.52.desc.6.0.2.1
				is_country = from
				has_country_flag = human_fallen_empires_population.50_switch_to_robot_hive
				has_valid_civic = civic_machine_assimilator
				exists = event_target:human_fallen_empires_event_target_5
			}
			success_text = {
				text = human_fallen_empires_population.52.desc.6.0.3.0
				is_country = from
				has_country_flag = human_fallen_empires_population.50_switch_to_robot_hive
				has_valid_civic = civic_machine_terminator
			}
			success_text = {
				text = human_fallen_empires_population.52.desc.6.0.3.1
				is_country = from
				has_country_flag = human_fallen_empires_population.50_switch_to_robot_hive
				has_valid_civic = civic_machine_terminator
				exists = event_target:human_fallen_empires_event_target_5
			}
			success_text = {
				text = human_fallen_empires_population.52.desc.6.1.0
				not = {
					is_country = from
				}
				from = {
					has_country_flag = human_fallen_empires_population.50_switch_to_robot_hive
				}
			}
			success_text = {
				text = human_fallen_empires_population.52.desc.6.1.1
				not = {
					is_country = from
				}
				from = {
					has_country_flag = human_fallen_empires_population.50_switch_to_robot_hive
					nor = {
						has_valid_civic = civic_machine_servitor
						has_valid_civic = civic_machine_assimilator
						has_valid_civic = civic_machine_terminator
					}
				}
			}
			success_text = {
				text = human_fallen_empires_population.52.desc.6.1.2
				not = {
					is_country = from
				}
				from = {
					has_country_flag = human_fallen_empires_population.50_switch_to_robot_hive
					has_valid_civic = civic_machine_servitor
				}
			}
			success_text = {
				text = human_fallen_empires_population.52.desc.6.1.3
				not = {
					is_country = from
				}
				from = {
					has_country_flag = human_fallen_empires_population.50_switch_to_robot_hive
					has_valid_civic = civic_machine_assimilator
				}
			}
			success_text = {
				text = human_fallen_empires_population.52.desc.6.1.4
				not = {
					is_country = from
				}
				from = {
					has_country_flag = human_fallen_empires_population.50_switch_to_robot_hive
					has_valid_civic = civic_machine_terminator
				}
			}
			# became bio hive
			success_text = {
				text = human_fallen_empires_population.52.desc.7.0.0
				is_country = from
				has_country_flag = human_fallen_empires_population.50_switch_to_bio_hive
			}
			success_text = {
				text = human_fallen_empires_population.52.desc.7.0.1
				is_country = from
				has_country_flag = human_fallen_empires_population.50_switch_to_bio_hive
				not = {
					has_valid_civic = civic_hive_devouring_swarm
				}
			}
			success_text = {
				text = human_fallen_empires_population.52.desc.7.0.2
				is_country = from
				has_country_flag = human_fallen_empires_population.50_switch_to_bio_hive
				has_valid_civic = civic_hive_devouring_swarm
			}
			success_text = {
				text = human_fallen_empires_population.52.desc.7.1.0
				not = {
					is_country = from
				}
				from = {
					has_country_flag = human_fallen_empires_population.50_switch_to_bio_hive
					not = {
						has_valid_civic = civic_hive_devouring_swarm
					}
				}
			}
			success_text = {
				text = human_fallen_empires_population.52.desc.7.1.1
				not = {
					is_country = from
				}
				from = {
					has_country_flag = human_fallen_empires_population.50_switch_to_bio_hive
					has_valid_civic = civic_hive_devouring_swarm
				}
			}
			# hives
			# from hive to regular
			success_text = {
				text = human_fallen_empires_population.52.desc.8.0.0
				is_country = from
				has_country_flag = human_fallen_empires_population.50_switch_from_hive
				has_country_flag = human_fallen_empires_population.50_was_servitor
			}
			success_text = {
				text = human_fallen_empires_population.52.desc.8.1.0
				not = {
					is_country = from
				}
				from = {
					has_country_flag = human_fallen_empires_population.50_switch_from_hive
					has_country_flag = human_fallen_empires_population.50_was_servitor
				}
			}
		}
	}
	# swith to hive
	picture = {
		trigger = {
			from = {
				has_country_flag = human_fallen_empires_population.50_switch_to_robot_hive
			}
		}
		picture = GFX_evt_glitchy_matrix
	}
	picture = {
		trigger = {
			from = {
				has_country_flag = human_fallen_empires_population.50_switch_to_bio_hive
			}
		}
		picture = GFX_evt_hive_mind
	}
	# bio pics for upgrade-subspecies
	picture = {
		trigger = {
			from = {
				has_authority = auth_hive_mind
				has_country_flag = human_fallen_empires_population.50_subspecies
			}
			has_country_flag = human_fallen_empires_random_0
		}
		picture = GFX_evt_hive_mind
	}
	picture = {
		trigger = {
			from = {
				has_country_flag = human_fallen_empires_population.50_subspecies
			}
			has_country_flag = human_fallen_empires_random_0
		}
		picture = GFX_evt_society_research
	}
	picture = {
		trigger = {
			from = {
				has_country_flag = human_fallen_empires_population.50_subspecies
			}
			has_country_flag = human_fallen_empires_random_1
		}
		picture = GFX_evt_clones
	}
	picture = {
		trigger = {
			from = {
				has_country_flag = human_fallen_empires_population.50_subspecies
			}
			has_country_flag = human_fallen_empires_random_2
		}
		picture = GFX_evt_genetic_modification
	}
	picture = {
		trigger = {
			from = {
				has_country_flag = human_fallen_empires_population.50_subspecies
			}
			has_country_flag = human_fallen_empires_random_3
		}
		picture = GFX_evt_circuitry_modification
	}
	# robot pics
	picture = {
		trigger = {
			from = {
				or = {
					has_authority = auth_machine_intelligence
					has_trait = trait_robotic_3
				}
			}
			or = {
				has_country_flag = human_fallen_empires_random_0
				has_country_flag = human_fallen_empires_random_1
			}
		}
		picture = GFX_evt_robot_assembly_plant
	}
	picture = {
		trigger = {
			from = {
				or = {
					has_authority = auth_machine_intelligence
					has_trait = trait_robotic_3
				}
			}
			or = {
				has_country_flag = human_fallen_empires_random_2
				has_country_flag = human_fallen_empires_random_3
			}
		}
		picture = GFX_evt_sapient_AI
	}
	picture = GFX_evt_alien_city
	show_sound = event_mystic_reveal_light
	is_triggered_only = yes

	# hive_mind
	# clones

	# genetic_modification
	# circuitry_modification
	# society_research

	# cybernetics

	# glitchy_matrix
	# sapient_AI
	# robot_assembly_plant

	trigger = {
		is_ai = no
		nand = {
			not = {
				is_country = from
			}
			has_country_flag = human_fallen_empires_population.52_block
		}
		exists = from
	}

	immediate = {
		human_fallen_empires_effect_random_roll_flags_4_country = yes
		if = {
			limit = {
				has_country_flag = human_fallen_empires_population.50_switch_to_robot_hive
			}
			every_owned_pop_species = {
				limit = {
					human_fallen_empires_trigger_is_robot = no
				}
				human_fallen_empires_effect_save_event_target = yes
			}
			every_relation = {
				limit = {
					human_fallen_empires_trigger_is_robot = no
				}
				species = {
					human_fallen_empires_effect_save_event_target = yes
				}
			}
		}
	}

	option = {
		name = INTERESTING
	}
	# option = {
	# 	name = human_fallen_empires_population.52.0.0
	# 	trigger = {
	# 		is_country = from
	# 	}
	# }
	# option = {
	# 	name = human_fallen_empires_population.52.0.1
	# 	trigger = {
	# 		not = {
	# 			is_country = from
	# 		}
	# 	}
	# }
	option = {
		name = human_fallen_empires_block
		custom_tooltip = human_fallen_empires_block.tooltip
		trigger = {
			not = {
				is_country = from
			}
		}
		hidden_effect = {
			set_country_flag = human_fallen_empires_population.52_block
		}
	}
}