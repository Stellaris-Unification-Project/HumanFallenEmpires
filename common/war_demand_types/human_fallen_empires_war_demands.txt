# variables:
# parameters, data containing the specifics, eg which planet we're talking about
# warscore_cost, scripted value, root is target country, amount of warscore required to push this demand
# potential, trigger, root and from are main attackers and defenders, war is fromfrom, decides if this demand is listed
# possible, trigger, root and from are main attackers and defenders, war is fromfrom, fromfromfrom is the target country, decides if this demand can go through
# proposable, trigger, root and from are main attackers and defenders, war is fromfrom, fromfromfrom is the target country, decides if this demand is ok to propose
# demandable, trigger, root and from are main attackers and defenders, war is fromfrom, fromfromfrom is the target country, decides if you can send a peace offer demanding ( not surrendering ) the demand.
# effect, effect, root and main are main attacker and defender, war is fromfrom, fromfromfrom is the target country, effect which executes when the demand is accepted
# execution_order, integer, defines in which order demands are executed, lower is higher priority, having the same execution order will make the first defined one higher prio
# monthly_warscore, a descriptor on monthly wargoal score
#	amount, scripted value, root and from are main attackers and defenders, war is fromfrom, fromfromfrom is the target country
#   valid, trigger, root and from are main attackers and defenders, war is fromfrom, fromfromfrom is the target country

# fromfromfrom - выгодополучатель

# loot raid
human_fallen_empires_loot_raid = {
	execution_order = 1

	parameters = {
		country = {
			type = country
		}
	}

	warscore_cost = {
		base = 10
		# Tech - Interstellar Campaigns
		modifier = {
			factor = 0.9
			custom_tooltip = {
				text = "war_demand_tech_interstellar_campaigns"
				has_technology = tech_interstellar_campaigns
			}
		}

		# Tech - Galactic Campaigns
		modifier = {
			factor = 0.9
			custom_tooltip = {
				text = "war_demand_tech_galactic_campaigns"
				has_technology = tech_galactic_campaigns
			}
		}
		modifier = {
			add = 5
			parameter:country = {
				energy >= 1000
			}
		}
		modifier = {
			add = 5
			parameter:country = {
				energy >= 2000
			}
		}
		modifier = {
			add = 5
			parameter:country = {
				energy >= 3000
			}
		}
		modifier = {
			add = 5
			parameter:country = {
				energy >= 4000
			}
		}
		modifier = {
			add = 5
			parameter:country = {
				energy >= 5000
			}
		}
		modifier = {
			add = 5
			parameter:country = {
				energy >= 6000
			}
		}
		modifier = {
			add = 5
			parameter:country = {
				energy >= 7000
			}
		}
		modifier = {
			add = 5
			parameter:country = {
				energy >= 8000
			}
		}
		modifier = {
			add = 5
			parameter:country = {
				energy >= 9000
			}
		}
		modifier = {
			add = 5
			parameter:country = {
				minerals >= 1000
			}
		}
		modifier = {
			add = 5
			parameter:country = {
				minerals >= 3000
			}
		}
		modifier = {
			add = 5
			parameter:country = {
				minerals >= 5000
			}
		}
		modifier = {
			add = 5
			parameter:country = {
				minerals >= 7000
			}
		}
		modifier = {
			add = 5
			parameter:country = {
				minerals >= 9000
			}
		}
		modifier = {
			add = 5
			parameter:country = {
				minerals >= 11000
			}
		}
		modifier = {
			add = 5
			parameter:country = {
				minerals >= 13000
			}
		}
		modifier = {
			add = 5
			parameter:country = {
				minerals >= 15000
			}
		}
		modifier = {
			add = 5
			parameter:country = {
				minerals >= 17000
			}
		}
	}

	potential = {
		human_fallen_empires_trigger_is_regular_fallen = no
		OR = {
			is_subject = no
			NOT = {
				overlord = {
					is_same_value = from
				}
			}
		}
		parameter:country = {
			or = {
				energy >= 100
				minerals >= 100
			}
		}
		custom_tooltip_fail = {
			text = "war_demand_vassalize_country_not_opponent"
			parameter:country = {
				OR = {
					AND = {
						exists = fromfrom
						from = {
							from = {
								is_war_participant = {
									who = prevprev
									side = prev
								}
							}
						}
					}
					AND = {
						NOT = { exists = fromfrom }
						would_join_war = {
							attacker = root
							defender = from
							side = from
						}
					}

				}
			}
		}
		custom_tooltip_fail = {
			text = "war_demand_vassalize_country_overlord_in_war"
			OR = {
				NOT = {
					exists = parameter:country.overlord
				}
				AND = {
					exists = fromfrom
					fromfrom = {
						NOT = {
							is_war_participant = {
								who = parameter:country.overlord
								side = root
							}
						}
					}
				}
				AND = {
					NOT = { exists = fromfrom }
					parameter:country.overlord = {
						NOT = {
							would_join_war = {
								attacker = root
								defender = from
								side = root
							}
						}
					}
				}
			}
		}
	}

	possible = {
		hidden:parameter:country = {
			custom_tooltip_fail = {
				text = "war_demand_vassalize_country_liberated"
				war_demand_counter = {
					type = liberated_or_vassalized
					value < 1
				}
			}
			custom_tooltip_fail = {
				text = "war_demand_vassalize_country_no_planets"
				war_demand_counter = {
					type = num_owned_planets
					value > 0
				}
			}
		}
	}

	proposable = {
		# parameter:country = {
			# num_pops > 0
		# }
	}

	effect = {
		parameter:country = {
			while = {
				limit = {
					energy >= 100
				}
				add_energy = -100
				fromfromfrom = {
					add_energy = 100
				}
			}
			while = {
				limit = {
					minerals >= 100
				}
				add_minerals = -100
				fromfromfrom = {
					add_minerals = 100
				}
			}
		}
	}

	ai_weight = {
		base = 10
		modifier = {
			factor = 0.5
			NOT = {
				parameter:country = {
					is_same_value = from
				}
			}
		}
		# modifier = {
			# factor = 0.5

		# }
	}
}

# disband federation
human_fallen_empires_disband_federation = {
	execution_order = 1

	parameters = {
		country = {
			type = country
		}
	}

	warscore_cost = {
		base = 50
		modifier = {
			add = 10
			count_relation = {
				count > 2
				limit = {
					# exists = this
					is_in_federation_with = prev
				}
			}
		}
		modifier = {
			add = 10
			count_relation = {
				count > 3
				limit = {
					# exists = this
					is_in_federation_with = prev
				}
			}
		}
		modifier = {
			add = 10
			count_relation = {
				count > 4
				limit = {
					# exists = this
					is_in_federation_with = prev
				}
			}
		}
		modifier = {
			add = 10
			count_relation = {
				count > 5
				limit = {
					# exists = this
					is_in_federation_with = prev
				}
			}
		}
		modifier = {
			add = 10
			count_relation = {
				count > 6
				limit = {
					# exists = this
					is_in_federation_with = prev
				}
			}
		}
	}

	potential = {
		parameter:country = {
			is_federation_leader = yes
		}
		custom_tooltip_fail = {
			text = "war_demand_vassalize_country_not_opponent"
			parameter:country = {
				OR = {
					AND = {
						exists = fromfrom
						from = {
							from = {
								is_war_participant = {
									who = prevprev
									side = prev
								}
							}
						}
					}
					AND = {
						NOT = { exists = fromfrom }
						would_join_war = {
							attacker = root
							defender = from
							side = from
						}
					}

				}
			}
		}
		custom_tooltip_fail = {
			text = "war_demand_vassalize_country_overlord_in_war"
			OR = {
				NOT = {
					exists = parameter:country.overlord
				}
				AND = {
					exists = fromfrom
					fromfrom = {
						NOT = {
							is_war_participant = {
								who = parameter:country.overlord
								side = root
							}
						}
					}
				}
				AND = {
					NOT = { exists = fromfrom }
					parameter:country.overlord = {
						NOT = {
							would_join_war = {
								attacker = root
								defender = from
								side = root
							}
						}
					}
				}
			}
		}
	}

	possible = {
		hidden:parameter:country = {
			has_federation = yes
			custom_tooltip_fail = {
				text = "war_demand_vassalize_country_liberated"
				war_demand_counter = {
					type = liberated_or_vassalized
					value < 1
				}
			}
			custom_tooltip_fail = {
				text = "war_demand_vassalize_country_no_planets"
				war_demand_counter = {
					type = num_owned_planets
					value > 0
				}
			}
		}
	}

	proposable = {
		parameter:country = {
			has_federation = yes
		}
	}

	effect = {
		# log = "[parameter:country.GetName]"
		# log = "[root.GetName]"
		# log = "[from.GetName]"
		# log = "[fromfromfrom.GetName]"
		parameter:country = {
			every_relation = {
				limit = {
					# exists = this
					is_in_federation_with = prev
				}
				country_event = {
					id = human_fallen_empires_features.6
					days = 10
				}
			}
			country_event = {
				id = human_fallen_empires_features.6
				days = 10
			}
		}
	}

	ai_weight = {
		base = 5
	}
}
