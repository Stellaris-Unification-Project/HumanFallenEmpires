# No scope, like on_game_start
on_yearly_pulse = {
	events = {
		human_fallen_empires.1
	}
}

# No scope, like on_game_start
on_bi_yearly_pulse = {
	events = {
		human_fallen_empires.2
	}
}

# No scope, like on_game_start
on_decade_pulse = {
	events = {
		human_fallen_empires.3
		human_fallen_empires.10000
	}
}

# Triggers when the game starts
#on_game_start = {
#	events = {
	#	human_fallen_empires.0
#	}
#}

# a new leader is generated for an empire, to be available for recruitment
# scope: country, from: leader
on_leader_spawned = {
	events = {

	}
}

# called during empire initialization when starting a new game
# scope: country
empire_init_add_technologies = {
	events = {

	}
}

# called during empire initialization when starting a new game
# This on_action should always result in the creation of at least one new pop
# scope: planet
empire_init_create_capital_pops = {
	events = {

	}
}
# called during empire initialization when starting a new game
# scope: country
empire_init_create_ships = {
	events = {
		# discovery
		human_fallen_empires_discovery.1
		human_fallen_empires_discovery.0
		# brainworm
		human_fallen_empires_brainworm.0
	}
}

# A country has increased the level of a tech, use last_increased_tech trigger to check tech and level.
# This = Country
on_tech_increased = {
	events = {
		human_fallen_empires_plague.9
	}
}

# Triggers event when a system is entered by ships from a country (not pirate or monsters) for the first time
# Scope = Ship
# From = System
# FromFrom = Country
on_entering_system_first_time = {
	events = {
		human_fallen_empires.600
	}
	random_events = {
		49 = 0
		# varelse fleet event
		1 = human_fallen_empires.51
	}
}

# Triggered when two empires discover each other
on_first_contact = {
	events = {
		human_fallen_empires_discovery.50
		human_fallen_empires_discovery.52
		# contact with egypt
		human_fallen_empires.46
		# contact with future
		human_fallen_empires.5000
		# contact with drone
		human_fallen_empires.604
	}
}

# Triggers when trying to open the diplomacy view for countries with custom diplomacy.
# Country scope
# This = target country (player)
# From = source country
on_custom_diplomacy = {
	events = {
		# pirate
		human_fallen_empires_pirate.100
	}
}

# A ship has surveyed a planet.
# Scope = Ship
# From = Planet
on_survey = {
	events = {
		human_fallen_empires.100
		human_fallen_empires.400
		human_fallen_empires.401
	}
}

# Triggers event when ship enters a system
# Scope = Ship
# From = System
# FromFrom = Country
on_entering_system = {
	events = {
		# find sol event chain
		human_fallen_empires.350
		# check enemys in system
		human_fallen_empires_discovery.103
	}
}

# This = owner of ship 1 (combatant)
# From = owner of ship 2 (destroyed)
# FromFrom = ship 1
# FromFromFrom = ship 2
on_ship_destroyed_perp = {
	events = {
		# dicovery gain resurces
		human_fallen_empires_discovery.100
		# pirate gain resurces
		human_fallen_empires_pirate.52
		# kill pirate base
		human_fallen_empires_pirate.5
		# kill check for contracts
		human_fallen_empires_discovery.101
		human_fallen_empires_discovery.102
	}
}

# This = owner of ship 1 (destroyed)
# From = owner of ship 2 (combatant)
# FromFrom = ship 1
# FromFromFrom = ship 2
on_ship_destroyed_victim = {
	events = {
		# discovery killed end game
		human_fallen_empires_discovery.51
		# remove modifier then dron outpost destroyed
		human_fallen_empires.602
		# kill drone base
		human_fallen_empires.603
	}
}

# A ship has been built
# Root = Ship
# From = Planet
on_ship_built = {
	events = {
		# pirate logic
		human_fallen_empires_pirate.4
	}
}

#From = Planet scope
#This = Fleet scope
on_fleet_enter_orbit = {
	events = {
		# docking event
		human_fallen_empires_discovery.150
	}
}

# A ship has started a new order
# Root = Ship
# From = Country
on_ship_order = {
	events = {
		human_fallen_empires_pirate.54
	}
}


# This = construction ship
# From = planet it is built on
# Fires when construction is complete,
# immediately before station is created
on_building_outpost_station = {
	events = {
		human_fallen_empires.601
	}
}

# A planet is being bombarded
# This = planet under bombardment
# From = bombarding empire
on_monthly_orbital_bombardment = {
	events = {
		# pirate bombard planet
		human_fallen_empires_pirate.53
		# drone bombard event
		human_fallen_empires.606
	}
}

# A fleet has successfully escaped from combat, executed right before the fleet enters FTL
# This = escaping fleet
# From = system escaped from
# FromFrom = system escaping to
on_emergency_ftl = {
	events = {
		human_fallen_empires_pirate.51
	}
}

# A war is beginning, executed for every country in the war.
# Root = Country
# From = War
on_war_beginning = {
	events = {
		human_fallen_empires.10011
	}
}


# A war has been won
# Root = Winner Warleader
# From = Loser Warleader
# FromFrom = War
on_war_won = {
	events = {
		human_fallen_empires_discovery.53
	}
}

# A war has been won, by force
# Root = Winner Warleader
# From = Loser Warleader
# FromFrom = War
on_war_won_forced = {
	events = {
		human_fallen_empires_discovery.53
	}
}

# A war has been lost
# Root = Loser Warleader
# From = Winner Warleader
# FromFrom = War
on_war_lost = {
	events = {
		human_fallen_empires_discovery.53
	}
}

# A war has been lost, by force
# Root = Loser Warleader
# From = Winner Warleader
# FromFrom = War
on_war_lost_forced = {
	events = {
		human_fallen_empires_discovery.53
	}
}

# A pop has finished migrating to another planet
# Root = pop
# From = Tile on the new planet
# FromFrom = Tile on the old planet
on_pop_migration_end = {
	events = {
		human_fallen_empires_migration.0
		# plague
		human_fallen_empires_plague.3
		# brainworm
		human_fallen_empires_brainworm.1
	}
}

# A pop has been resettled to another planet
# Root = pop
# From = Tile on the old planet
on_pop_resettled = {
	events = {
		human_fallen_empires_migration.0
		# brainworm
		human_fallen_empires_brainworm.2

	}
}

# A pop has been born
# This = pop
on_pop_birth = {
	events = {
		human_fallen_empires_migration.0
		# brainworm
		human_fallen_empires_brainworm.2

	}
}

# A planet has been colonized.
# Scope = Planet
on_colonized = {
	events = {
		human_fallen_empires_migration.1
	}
}

# From = Tile
# This = Planet
on_blocker_cleared = {
	events = {
		human_fallen_empires_migration.1
	}
}

#From = Country scope
#This = Planet scope
on_planet_ownerless = {
	events = {
		human_fallen_empires_migration.1
	}
}

#From = Country scope
#This = Planet scope
on_planet_transfer = {
	events = {
		human_fallen_empires_migration.1
	}
}

#This = Planet scope
#From = Country
on_purge_complete = {
	events = {
		human_fallen_empires_migration.1
		human_fallen_empires_plague.6
	}
}

# A planets controller becomes a country not the same as the owner.
# Root = Planet
# From = Planet Owner
# FromFrom = Planet Controller (the one occupying)
on_planet_occupied = {
	events = {
		# zombie tale planet
		human_fallen_empires_plague.5
		# retale planet from zombie
		human_fallen_empires_plague.7
	}
}

# Triggers country_event for the defender upon defeat
# This = country, planet owner
# From = country, attack leader
# FromFrom = planet
on_planet_defenders_lose = {
	events = {
		# take occupyd by zombies planet
		human_fallen_empires_plague.8
	}
}



# X years has passed since a planet was colonized (won't trigger on empire homeworld)
on_colony_1_year_old = {
	random_events = {
		20 = 0

		1 = human_fallen_empires.150
		1 = human_fallen_empires.200
		1 = human_fallen_empires.250
		1 = human_fallen_empires.300
	}
}

on_colony_2_years_old = {
	random_events = {
		20 = 0

		1 = human_fallen_empires.150
		1 = human_fallen_empires.200
		1 = human_fallen_empires.250
		1 = human_fallen_empires.300
	}
}

on_colony_3_years_old = {
	random_events = {
		20 = 0

		1 = human_fallen_empires.150
		1 = human_fallen_empires.200
		1 = human_fallen_empires.250
		1 = human_fallen_empires.300
	}
}

on_colony_4_years_old = {
	random_events = {
		20 = 0

		1 = human_fallen_empires.150
		1 = human_fallen_empires.200
		1 = human_fallen_empires.250
		1 = human_fallen_empires.300
	}
}

on_colony_5_years_old = {
	random_events = {
		20 = 0

		1 = human_fallen_empires.150
		1 = human_fallen_empires.200
		1 = human_fallen_empires.250
		1 = human_fallen_empires.300
	}
}

on_colony_6_years_old = {
	random_events = {
		20 = 0

		1 = human_fallen_empires.150
		1 = human_fallen_empires.200
		1 = human_fallen_empires.250
		1 = human_fallen_empires.300
	}
}

on_colony_7_years_old = {
	random_events = {
		20 = 0

		1 = human_fallen_empires.150
		1 = human_fallen_empires.200
		1 = human_fallen_empires.250
		1 = human_fallen_empires.300
	}
}

on_colony_8_years_old = {
	random_events = {
		20 = 0

		1 = human_fallen_empires.150
		1 = human_fallen_empires.200
		1 = human_fallen_empires.250
		1 = human_fallen_empires.300
	}
}

on_colony_9_years_old = {
	random_events = {
		20 = 0

		1 = human_fallen_empires.150
		1 = human_fallen_empires.200
		1 = human_fallen_empires.250
		1 = human_fallen_empires.300
	}
}

on_colony_10_years_old = {
	random_events = {
		20 = 0

		1 = human_fallen_empires.150
		1 = human_fallen_empires.200
		1 = human_fallen_empires.250
		1 = human_fallen_empires.300
	}
}
