#

# quarantine
country_edict = {
	name = human_fallen_empires_plague_quarantine
	length = 3655
	cost = {
		energy = 50
		influence = 50
	}
	prerequisites = {
		human_fallen_empires_tech_plague_study
	}
	allow = {
		custom_tooltip = {
			fail_text = human_fallen_empires_plague_quarantine_fail
			any_owned_planet = {
				has_planet_flag = human_fallen_empires_plague_planet
			}
		}
	}
	modifier = {
		planet_jobs_minerals_produces_mult = -0.1
	 	planet_jobs_energy_produces_mult = -0.1
		planet_jobs_food_produces_mult = -0.1
		pop_migration_speed = -0.5
	}
	ai_weight = {
		weight = 300
	}
}

# for psionic
planet_edict = {
	name = human_fallen_empires_plague_psi_clear
	length = 0
	cost = {
		energy = 254
		influence = 25
	}
	potential = {
		exists = owner
		owner = {
			has_ascension_perk = ap_transcendence
			has_technology = human_fallen_empires_tech_plague_study
		}
	}
	allow = {
		custom_tooltip = {
			fail_text = human_fallen_empires_plague_clear_fail
			has_planet_flag = human_fallen_empires_plague_planet
		}
	}
	effect = {
		hidden_effect = {
			human_fallen_empires_effect_plague_planet_clean = yes
		}
	}
	ai_weight = {
		weight = 300
	}
}

# bombardment
planet_edict = {
	name = human_fallen_empires_plague_planet_bombardment
	length = 0
	cost = {
		influence = 25
	}
	potential = {
		owner = {
			allows_purge = yes
			has_technology = human_fallen_empires_tech_plague_study
		}
		not = {
			has_planet_flag = human_fallen_empires_project_plague_planet_bombardment
		}
	}
	allow = {
		custom_tooltip = {
			fail_text = human_fallen_empires_plague_clear_fail
			has_planet_flag = human_fallen_empires_plague_planet
		}
	}
	effect = {
		save_event_target_as = human_fallen_empires_project_plague_planet_bombardment_target
		enable_special_project = {
			name = human_fallen_empires_project_plague_planet_bombardment
			owner = owner
			location = this
		}
		hidden_effect = {
			set_timed_planet_flag = {
				flag = human_fallen_empires_project_plague_planet_bombardment
				days = 1080
			}
		}
	}
	ai_weight = {
		weight = 1
		modifier = {
			factor = 0
			owner = {
				is_xenophobe = no
			}
			pop_percentage = {
				percentage < 0.2
				limit = {
					is_same_species = root.owner
				}
			}
		}
	}
}
