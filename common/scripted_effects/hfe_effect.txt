#

# for country/planet
hfe_effect_refuge_10 = {
	every_owned_pop = {
		random_list = {
			90 = {
			}
			10 = {
				hfe_effect_refuge_or_die = yes
			}
		}
	}
}

# for pop
hfe_effect_refuge_or_die = {
	#log = "pop refuge effect"
	if = {
		limit = {
			is_robot_pop = no
			nor = {
				has_trait = trait_hive_mind
				has_trait = trait_nerve_stapled
			}
			exists = owner
			owner = {
				any_relation = {
					num_pops > 0
					hfe_trigger_is_awake = yes
					any_owned_planet = {
						hfe_trigger_planet_valid_for_settle = yes
					}
				}
			}
		}
		save_event_target_as = hfe_refuge_pop_target
		owner = {
			random_relation = {
				limit = {
					num_pops > 0
					hfe_trigger_is_awake = yes
					any_owned_planet = {
						hfe_trigger_planet_valid_for_settle = yes
						habitability = {
							who = event_target:hfe_refuge_pop_target
							value >= 0.2
						}
					}
				}
				weights = {
					base = 10
					modifier = {
						mult = 0
						has_policy_flag = refugees_not_allowed
						event_target:hfe_refuge_pop_target = {
							not = {
								is_same_species = prev
							}
						}
					}
					modifier = {
						mult = 0
						has_policy_flag = refugees_only_citizens
						event_target:hfe_refuge_pop_target = {
							nor = {
								is_same_species = prev
								has_citizenship_type = {
									type = citizenship_full
									country = prev
								}
								has_citizenship_type = {
									type = citizenship_caste_system
									country = prev
								}
								has_citizenship_type = {
									type = citizenship_organic_trophy
									country = prev
								}
							}
						}
					}
					modifier = {
						mult = 100
						has_country_flag = hfe_refuge_country_prior@prev
					}
					modifier = {
						mult = 8
						event_target:hfe_refuge_pop_target = {
							or = {
								has_citizenship_type = {
									type = citizenship_full
									country = prev
								}
								has_citizenship_type = {
									type = citizenship_caste_system
									country = prev
								}
								has_citizenship_type = {
									type = citizenship_organic_trophy
									country = prev
								}
							}
						}
					}
					modifier = {
						mult = 2
						event_target:hfe_refuge_pop_target = {
							or = {
								has_citizenship_type = {
									type = citizenship_limited
									country = prev
								}
								has_citizenship_type = {
									type = citizenship_caste_system_limited
									country = prev
								}
							}
						}
					}
					modifier = {
						mult = 2
						has_policy_flag = refugees_allowed
					}
					modifier = {
						mult = 2
						any_owned_planet = {
							hfe_trigger_planet_valid_for_settle = yes
							habitability = {
								who = event_target:hfe_refuge_pop_target
								value >= 0.6
							}
						}
					}
					modifier = {
						mult = 2
						any_owned_planet = {
							hfe_trigger_planet_valid_for_settle = yes
							habitability = {
								who = event_target:hfe_refuge_pop_target
								value >= 0.4
							}
						}
					}
					modifier = {
						mult = 0.5
						event_target:hfe_refuge_pop_target = {
							has_citizenship_type = {
								type = citizenship_assimilation
								country = prev
							}
						}
					}
					modifier = {
						mult = 0.25
						event_target:hfe_refuge_pop_target = {
							has_citizenship_type = {
								type = citizenship_slavery
								country = prev
							}
						}
					}
				}
				event_target:hfe_refuge_pop_target = {
					remove_modifier = pop_recently_conquered
					add_modifier = {
						modifier = recent_refugee
						days = 3600
					}
					save_event_target_as = hfe_settle_pop_target
				}
				hfe_effect_settle_pop = yes
			}
		}
	}
	else = {
		log = "refuge pop killed"
		kill_pop = yes
	}
}

# for country need hfe_settle_pop_target
hfe_effect_settle_pop = {
	if = {
		limit = {
			not = {
				any_owned_planet = {
					hfe_trigger_planet_valid_for_settle = yes
					# habitability = {
						# who = event_target:hfe_settle_pop_target
						# value >= 0.2
					# }
				}
			}
		}
		event_target:hfe_settle_pop_target = {
			log = "looping in settle pop"
			hfe_effect_refuge_or_die = yes
		}
	}
	else = {
		random_owned_planet = {
			limit = {
				hfe_trigger_planet_valid_for_settle = yes
				# habitability = {
					# who = event_target:hfe_settle_pop_target
					# value > 0.2
				# }
			}
			weights = {
				base = 10
				modifier = {
					mult = 2
					habitability = {
						who = event_target:hfe_settle_pop_target
						value > 0.8
					}
				}
				modifier = {
					mult = 2
					habitability = {
						who = event_target:hfe_settle_pop_target
						value > 0.7
					}
				}
				modifier = {
					mult = 2
					habitability = {
						who = event_target:hfe_settle_pop_target
						value > 0.6
					}
				}
				modifier = {
					mult = 2
					habitability = {
						who = event_target:hfe_settle_pop_target
						value > 0.5
					}
				}
				modifier = {
					mult = 2
					habitability = {
						who = event_target:hfe_settle_pop_target
						value > 0.4
					}
				}
				modifier = {
					mult = 2
					habitability = {
						who = event_target:hfe_settle_pop_target
						value > 0.3
					}
				}
			}
			# event_target:hfe_settle_pop_target = {
			# 	purge = no
			# }
			resettle_pop = {
				pop = event_target:hfe_settle_pop_target
				planet = this
			}
			#log = "pop moved to [this.GetName]"
		}
	}
}

# for country need hfe_settle_pop_target
hfe_effect_settle_pop_from_slavery_buff = {
	event_target:hfe_settle_pop_target = {
		if = {
			limit = {
				nor = {
					has_citizenship_type = {
						country = owner
						type = citizenship_slavery
					}
					has_citizenship_type = {
						country = owner
						type = citizenship_purge
					}
					has_citizenship_type = {
						country = owner
						type = citizenship_purge_machine
					}
				}
			}
			add_modifier = {
				modifier = pop_saved_from_slavery
				days = 3650
			}
		}
		else = {
			add_modifier = {
				modifier = hfe_pirate_pop_purchased
				days = 3650
			}
		}
	}
}

# for pop
hfe_effect_add_random_trait = {
	random_list = {
		1 = {
			modifier = {
				factor = 0
				has_trait = hfe_species_trait_hucksters
			}
			modify_species = {
				add_trait = hfe_species_trait_hucksters
			}
		}
		1 = {
			modifier = {
				factor = 0
				has_trait = hfe_species_trait_war_fans
			}
			modify_species = {
				add_trait = hfe_species_trait_war_fans
			}
		}
		1 = {
			modifier = {
				factor = 0
				has_trait = hfe_species_trait_error
			}
			modify_species = {
				add_trait = hfe_species_trait_error
			}
		}
		1 = {
			modifier = {
				factor = 0
				has_trait = hfe_species_trait_happy_slave
			}
			modify_species = {
				add_trait = hfe_species_trait_happy_slave
			}
		}
		1 = {
			modifier = {
				factor = 0
				has_trait = hfe_species_trait_clever_beast
			}
			modify_species = {
				add_trait = hfe_species_trait_clever_beast
			}
		}
	}
}

hfe_effect_event_47_next = {
	hidden_effect = {
		switch = {
			trigger = has_country_flag
			hfe.47.step0 = {
				remove_country_flag = hfe.47.step0
				set_country_flag = hfe.47.step1
				country_event = {
					id = hfe.47
				}
			}
			hfe.47.step1 = {
				remove_country_flag = hfe.47.step1
				set_country_flag = hfe.47.step2
				country_event = {
					id = hfe.47
				}
			}
			hfe.47.step2 = {
				remove_country_flag = hfe.47.step2
				set_country_flag = hfe.47.step3
				country_event = {
					id = hfe.47
				}
			}
			hfe.47.step3 = {
				remove_country_flag = hfe.47.step3
				set_country_flag = hfe.47.step4
				country_event = {
					id = hfe.47
				}
			}
			hfe.47.step4 = {
				# it also remove other non step flags
				hfe_effect_event_47_clear_flags = yes
			}
		}
	}
}

hfe_effect_event_47_clear_flags = {
	hidden_effect = {
		remove_country_flag = hfe.47.step3_bad_news.0
		remove_country_flag = hfe.47.step3_bad_news.1
		remove_country_flag = hfe_egypt_wormhole
		remove_country_flag = hfe.47.step0
		remove_country_flag = hfe.47.step1
		remove_country_flag = hfe.47.step2
		remove_country_flag = hfe.47.step3
		remove_country_flag = hfe.47.step4
	}
}

hfe_effect_event_702_next = {
	hidden_effect = {
		switch = {
			trigger = has_country_flag
			hfe.702.0 = {
				remove_country_flag = hfe.702.0
				set_country_flag = hfe.702.1
			}
			hfe.702.1 = {
				remove_country_flag = hfe.702.1
				set_country_flag = hfe.702.2
			}
			hfe.702.2 = {
				remove_country_flag = hfe.702.2
				set_country_flag = hfe.702.3
			}
			hfe.702.3 = {
				remove_country_flag = hfe.702.3
				set_country_flag = hfe.702.4
			}
			hfe.702.4 = {
				remove_country_flag = hfe.702.4
				set_country_flag = hfe.702.5
			}
			hfe.702.5 = {
				remove_country_flag = hfe.702.5
				set_country_flag = hfe.702.6
			}
			hfe.702.6 = {
				remove_country_flag = hfe.702.6
				set_country_flag = hfe.702.7
			}
			hfe.702.7 = {
				remove_country_flag = hfe.702.7
			}
		}
		if = {
			limit = {
				or = {
					has_country_flag = hfe.702.6
					has_country_flag = hfe.702.7
					has_country_flag = hfe.702.goodend
					has_country_flag = hfe.702.badend
				}
			}
			country_event = {
				id = hfe.703
			}
		}
		else = {
			country_event = {
				id = hfe.702
			}
		}
	}
}

hfe_effect_event_711_next = {
	hidden_effect = {
		switch = {
			trigger = has_country_flag
			default = {
				set_country_flag = hfe.711.4.1
				country_event = {
					id = hfe.711
				}
			}
			hfe.711.4.1 = {
				remove_country_flag = hfe.711.4.1
				set_country_flag = hfe.711.4.2
				country_event = {
					id = hfe.711
				}
			}
			hfe.711.4.2 = {
				remove_country_flag = hfe.711.4.2
				set_country_flag = hfe.711.4.3
				country_event = {
					id = hfe.711
				}
			}
			hfe.711.4.3 = {
				remove_country_flag = hfe.711.4.3
				set_country_flag = hfe.711.4.4
				country_event = {
					id = hfe.711
				}
			}
			hfe.711.4.4 = {
				remove_country_flag = hfe.711.4.4
				set_country_flag = hfe.711.4.5
				country_event = {
					id = hfe.711
				}
			}
			hfe.711.4.5 = {
				remove_country_flag = hfe.711.4.5
				set_country_flag = hfe.711.dialog.0.complete
			}
		}
	}
}



hfe_effect_event_5001_next = {
	hidden_effect = {
		switch = {
			trigger = has_country_flag
			hfe.5001.step0 = {
				remove_country_flag = hfe.5001.step0
				set_country_flag = hfe.5001.step1
				country_event = {
					id = hfe.5001
				}
			}
			hfe.5001.step1 = {
				remove_country_flag = hfe.5001.step1
				set_country_flag = hfe.5001.step2
				country_event = {
					id = hfe.5001
				}
			}
			hfe.5001.step2 = {
				remove_country_flag = hfe.5001.step2
				set_country_flag = hfe.5001.step3
				country_event = {
					id = hfe.5001
				}
			}
			hfe.5001.step3 = {
				remove_country_flag = hfe.5001.step3
				set_country_flag = hfe.5001.step4
				country_event = {
					id = hfe.5001
				}
			}
			hfe.5001.step4 = {
				remove_country_flag = hfe.5001.step4
				set_country_flag = hfe.5001.step5
				country_event = {
					id = hfe.5001
				}
			}
			hfe.5001.step5 = {
				remove_country_flag = hfe.5001.step5
				set_country_flag = hfe.5001.step6
				country_event = {
					id = hfe.5002
				}
			}
			hfe.5001.step6 = {
				remove_country_flag = hfe.5001.step6
				set_country_flag = hfe.5001.step7
				country_event = {
					id = hfe.5002
				}
			}
			hfe.5001.step7 = {
				remove_country_flag = hfe.5001.step7
				remove_country_flag = hfe.5001.step5.human
				remove_country_flag = hfe.5001.step4.human
				remove_country_flag = hfe.5001.step3.human
				remove_country_flag = hfe.5001.step2.human
			}
		}
	}
}

# varelse fleet event
# for fleet
hfe_effect_varelse_fleet_attack_home_of_light = {
	set_fleet_stance = aggressive
	clear_fleet_actions = this
	queue_actions = {
		find_closest_system = {
			trigger = {
				id = hfe_effect_varelse_fleet_attack_home_of_light_trigger.0
				any_system_planet = {
					has_planet_flag = hfe_home_of_light
				}
			}
			found_system = {
				move_to = this
				effect = {
					id = hfe_effect_varelse_fleet_attack_home_of_light_effect.1
					if = {
						limit = {
							any_system_planet = {
								has_planet_flag = hfe_home_of_light
								nand = {
									exists = owner
									owner = {
										has_country_flag = hfe_egypt
									}
								}
							}
						}
						event_target:hfe_varelse_fleet = {
							hfe_effect_varelse_fleet_find_new_home = yes
						}
					}
					else = {
						event_target:hfe_varelse_fleet.owner = {
							set_faction_hostility = {
								set_hostile = yes
							}
						}
					}
				}
				find_closest_planet = {
					trigger = {
						id = hfe_effect_varelse_fleet_attack_home_of_light_trigger.1
						has_planet_flag = hfe_home_of_light
					}
					found_planet = {
						move_to = this
						repeat = {
							while = {
								id = hfe.53.attact_trigger.2
								num_pops > 0
							}
							wait = 60
						}
						effect = {
							id = hfe_effect_varelse_fleet_attack_home_of_light_effect.2
							event_target:hfe_varelse_fleet = {
								hfe_effect_varelse_fleet_find_new_home = yes
							}
						}
					}
				}
			}
			failed = {
				wait = 100
				effect = {
					id = hfe_effect_varelse_fleet_attack_home_of_light_effect.3
					event_target:hfe_varelse_fleet = {
						hfe_effect_varelse_fleet_find_new_home = yes
					}
				}
			}
		}
	}
}

hfe_effect_varelse_fleet_find_new_home = {
	clear_fleet_actions = this
	queue_actions = {
		find_closest_system = {
			trigger = {
				id = hfe_find_new_home_trigger.0
				any_system_planet = {
					not = {
						exists = owner
					}
					habitability = {
						who = event_target:hfe_varelse_species
						value > 0.7
					}
				}
			}
			found_system = {
				move_to = this
			}
			failed = {
				find_closest_system = {
					trigger = {
						id = hfe_find_new_home_trigger.1
						any_system_planet = {
							not = {
								exists = owner
							}
							habitability = {
								who = event_target:hfe_varelse_species
								value > 0.4
							}
						}
					}
					found_system = {
						move_to = this
					}
					failed = {
						find_closest_system = {
							trigger = {
								id = hfe_find_new_home_trigger.2
								any_system_planet = {
									not = {
										exists = owner
									}
									habitability = {
										who = event_target:hfe_varelse_species
										value > 0.1
									}
								}
							}
							found_system = {
								move_to = this
							}
							failed = {
								wait = 100
								effect = {
									id = hfe_find_new_home_effect.0
									hfe_effect_varelse_fleet_attack_home_of_light = yes
								}
							}
						}
					}
				}
			}
		}
		find_closest_planet = {
			trigger = {
				id = hfe_find_new_home_trigger.3
				not = { exists = owner }
				habitability = {
					who = event_target:hfe_varelse_species
					value > 0.7
				}
			}
			found_planet = {
				move_to = this
				effect = {
					id = hfe_find_new_home_effect.1
					hfe_effect_varelse_fleet_find_new_home_colony = yes
				}
			}
			failed = {
				find_closest_planet = {
					trigger = {
						id = hfe_find_new_home_trigger.4
						not = { exists = owner }
						habitability = {
							who = event_target:hfe_varelse_species
							value > 0.4
						}
					}
					found_planet = {
						move_to = this
						effect = {
							id = hfe_find_new_home_effect.2
							hfe_effect_varelse_fleet_find_new_home_colony = yes
						}
					}
					failed = {
						find_closest_planet = {
							trigger = {
								id = hfe_find_new_home_trigger.5
								not = {
									exists = owner
								}
								habitability = {
									who = event_target:hfe_varelse_species
									value > 0.1
								}
							}
							found_planet = {
								move_to = this
								effect = {
									id = hfe_find_new_home_effect.3
									hfe_effect_varelse_fleet_find_new_home_colony = yes
								}
							}
						}
					}
				}
			}
		}
	}
}

hfe_effect_varelse_fleet_find_new_home_colony = {
	create_country = {
		name = "Varelse Hegemony"
		type = default
		species = event_target:hfe_varelse_species
		ethos = {
			ethic = ethic_xenophobe
			ethic = ethic_militarist
			ethic = ethic_materialist
		}
		effect = {
			hfe_effect_gov_fix = yes
			hfe_effect_init_give_tech_t3 = yes
			set_country_flag = hfe_varelse
			prev = {
				create_colony = {
					owner = prev
				}
			}
			event_target:hfe_varelse_fleet = {
				set_owner = prev
			}
			every_owned_ship = {
				repair_ship = yes
				add_modifier = {
					modifier = hfe_unkeep
				}
			}
		}
	}
	create_pop = {
		species = owner
	}
	create_pop = {
		species = owner
	}
	hfe_effect_create_starbase_starport_from_planet = yes
}

# for country return 6 event targets
hfe_effect_save_event_target = {
	if = {
		limit = {
			exists = event_target:hfe_event_target_5
		}
	}
	else_if = {
		limit = {
			not = {
				exists = event_target:hfe_event_target_0
			}
		}
		save_event_target_as = hfe_event_target_0
	}
	else_if = {
		limit = {
			nor = {
				is_same_value = event_target:hfe_event_target_0
				exists = event_target:hfe_event_target_1
			}
		}
		save_event_target_as = hfe_event_target_1
	}
	else_if = {
		limit = {
			nor = {
				is_same_value = event_target:hfe_event_target_0
				is_same_value = event_target:hfe_event_target_1
				exists = event_target:hfe_event_target_2
			}
		}
		save_event_target_as = hfe_event_target_2
	}
	else_if = {
		limit = {
			nor = {
				is_same_value = event_target:hfe_event_target_0
				is_same_value = event_target:hfe_event_target_1
				is_same_value = event_target:hfe_event_target_2
				exists = event_target:hfe_event_target_3
			}
		}
		save_event_target_as = hfe_event_target_3
	}
	else_if = {
		limit = {
			nor = {
				is_same_value = event_target:hfe_event_target_0
				is_same_value = event_target:hfe_event_target_1
				is_same_value = event_target:hfe_event_target_2
				is_same_value = event_target:hfe_event_target_3
				exists = event_target:hfe_event_target_4
			}
		}
		save_event_target_as = hfe_event_target_4
	}
	else_if = {
		limit = {
			nor = {
				is_same_value = event_target:hfe_event_target_0
				is_same_value = event_target:hfe_event_target_1
				is_same_value = event_target:hfe_event_target_2
				is_same_value = event_target:hfe_event_target_3
				is_same_value = event_target:hfe_event_target_4
				exists = event_target:hfe_event_target_5
			}
		}
		save_event_target_as = hfe_event_target_5
	}
}

hfe_effect_clear_event_target = {
	# clear_global_event_target = hfe_event_target_0
	# clear_global_event_target = hfe_event_target_1
	# clear_global_event_target = hfe_event_target_2
	# clear_global_event_target = hfe_event_target_3
	# clear_global_event_target = hfe_event_target_4
	# clear_global_event_target = hfe_event_target_5
}

# for country
hfe_effect_create_egypt_fleet = {
	create_leader = {
		class = admiral
		species = this
		skill = 5
		leader_age_min = 150
		leader_age_max = 650
	}
	create_fleet_from_naval_cap = 0.2
	last_created_fleet = {
		assign_leader = last_created_leader
	}
	create_fleet = {
		# settings = {
		# 	can_change_composition = no
		# 	uses_naval_capacity = no
		# }
		effect = {
			set_owner = prev
			while = {
				count = 5
				create_ship = {
					random_existing_design = battleship
				}
			}
			assign_leader = last_created_leader
			while = {
				count = 7
				create_ship = {
					random_existing_design = cruiser
				}
			}
			while = {
				count = 10
				create_ship = {
					random_existing_design = destroyer
				}
			}
			while = {
				count = 20
				create_ship = {
					random_existing_design = corvette
				}
			}
			set_location = {
				target = owner.capital_star
				distance = 90
				angle = random
			}
		}
	}
}

# for country
hfe_effect_create_future_fleet = {
	create_leader = {
		class = admiral
		species = this
		skill = 5
		leader_age_min = 40
	}
	create_fleet = {
		# settings = {
		# 	can_change_composition = no
		# 	uses_naval_capacity = no
		# }
		effect = {
			set_owner = prev
			while = {
				count = 5
				create_ship = {
					random_existing_design = battleship
				}
			}
			assign_leader = last_created_leader
			while = {
				count = 7
				create_ship = {
					random_existing_design = cruiser
				}
			}
			while = {
				count = 10
				create_ship = {
					random_existing_design = destroyer
				}
			}
			while = {
				count = 20
				create_ship = {
					random_existing_design = corvette
				}
			}
			set_location = {
				target = owner.capital_star
				distance = 90
				angle = random
			}
		}
	}
}

# for tile
# hfe_effect_set_random_deposit = {
# 	random_list = {
# 		30 = {
# 			hfe_effect_set_science_deposit = yes
# 		}
# 		10 = {
# 			hfe_effect_set_energy_deposit = yes
# 		}
# 		10 = {
# 			hfe_effect_set_mineral_deposit = yes
# 		}
# 	}
# }

# hfe_effect_set_science_deposit = {
# 	random_list = {
# 		10 = {
# 			hfe_effect_set_physics_deposit = yes
# 		}
# 		10 = {
# 			hfe_effect_set_society_deposit = yes
# 		}
# 		10 = {
# 			hfe_effect_set_engineering_deposit = yes
# 		}
# 	}
# }

# hfe_effect_set_energy_deposit = {
# 	random_list = {
# 		10 = {
# 			set_deposit = d_energy_deposit
# 		}
# 		10 = {
# 			set_deposit = d_rich_energy_deposit
# 		}
# 		10 = {
# 			set_deposit = d_vast_energy_deposit
# 		}
# 		10 = {
# 			set_deposit = d_immense_energy_deposit
# 		}
# 	}
# }

hfe_effect_set_mineral_orbital_deposit = {
	random_list = {
		10 = {
			set_deposit = d_minerals_1
		}
		10 = {
			set_deposit = d_minerals_2
		}
		10 = {
			set_deposit = d_minerals_3
		}
		10 = {
			set_deposit = d_minerals_4
		}
		10 = {
			set_deposit = d_minerals_5
		}
		10 = {
			set_deposit = d_minerals_6
		}
		10 = {
			set_deposit = d_minerals_7
		}
		10 = {
			set_deposit = d_minerals_8
		}
		10 = {
			set_deposit = d_minerals_9
		}
		10 = {
			set_deposit = d_minerals_10
		}
	}
}

hfe_effect_set_energy_orbital_deposit = {
	random_list = {
		10 = {
			set_deposit = d_energy_1
		}
		10 = {
			set_deposit = d_energy_2
		}
		10 = {
			set_deposit = d_energy_3
		}
		10 = {
			set_deposit = d_energy_4
		}
		10 = {
			set_deposit = d_energy_5
		}
		10 = {
			set_deposit = d_energy_6
		}
		10 = {
			set_deposit = d_energy_7
		}
		10 = {
			set_deposit = d_energy_8
		}
		10 = {
			set_deposit = d_energy_9
		}
		10 = {
			set_deposit = d_energy_10
		}
	}
}

# hfe_effect_set_food_deposit = {
# 	random_list = {
# 		10 = {
# 			set_deposit = d_farmland_deposit
# 		}
# 		10 = {
# 			set_deposit = d_rich_farmland_deposit
# 		}
# 		10 = {
# 			set_deposit = d_vast_farmland_deposit
# 		}
# 		10 = {
# 			set_deposit = d_immense_farmland_deposit
# 		}
# 	}
# }

# hfe_effect_set_physics_deposit = {
# 	random_list = {
# 		10 = {
# 			set_deposit = d_physics_deposit
# 		}
# 		10 = {
# 			set_deposit = d_rich_physics_deposit
# 		}
# 		10 = {
# 			set_deposit = d_vast_physics_deposit
# 		}
# 		10 = {
# 			set_deposit = d_immense_physics_deposit
# 		}
# 	}
# }

# hfe_effect_set_society_deposit = {
# 	random_list = {
# 		10 = {
# 			set_deposit = d_society_deposit
# 		}
# 		10 = {
# 			set_deposit = d_rich_society_deposit
# 		}
# 		10 = {
# 			set_deposit = d_vast_society_deposit
# 		}
# 		10 = {
# 			set_deposit = d_immense_society_deposit
# 		}
# 	}
# }

# hfe_effect_set_engineering_deposit = {
# 	random_list = {
# 		10 = {
# 			set_deposit = d_engineering_deposit
# 		}
# 		10 = {
# 			set_deposit = d_rich_engineering_deposit
# 		}
# 		10 = {
# 			set_deposit = d_vast_engineering_deposit
# 		}
# 		10 = {
# 			set_deposit = d_immense_engineering_deposit
# 		}
# 	}
# }

# hfe_effect_set_memorial_tile = {
# 	random_list = {
# 		20 = {
# 		}
# 		5 = {
# 			set_blocker = tb_radioactive_wasteland
# 		}
# 		10 = {
# 			set_blocker = tb_city_ruins
# 		}
# 		10 = {
# 			set_blocker = tb_bombarded_land
# 		}
# 		10 = {
# 			set_blocker = tb_battlefield_debris
# 		}
# 		2 = {
# 			set_blocker = tb_ancient_ruins
# 		}
# 		1 = {
# 			add_building = building_dark_matter_power_plant
# 		}
# 		1 = {
# 			add_building = building_agri_processing_complex
# 		}
# 		1 = {
# 			add_building = building_ancient_factory
# 		}
# 		1 = {
# 			add_building = building_ancient_archives
# 		}
# 		20 = {
# 			hfe_effect_set_random_deposit = yes
# 		}
# 	}
# }

# for leader
hfe_effect_add_psionic_trait = {
	if = {
		limit = {
			nor = {
				has_trait = leader_trait_admiral_psionic
				has_trait = leader_trait_general_psionic
				has_trait = leader_trait_governor_psionic
				has_trait = leader_trait_scientist_psionic
				has_trait = leader_trait_ruler_psionic
				has_trait = leader_trait_admiral_chosen
				has_trait = leader_trait_general_chosen
				has_trait = leader_trait_governor_chosen
				has_trait = leader_trait_scientist_chosen
				has_trait = leader_trait_ruler_chosen
			}
		}
		switch = {
			trigger = leader_class
			admiral = {
				add_trait = leader_trait_admiral_psionic
				add_ruler_trait = leader_trait_ruler_psionic
			}
			general = {
				add_trait = leader_trait_general_psionic
				add_ruler_trait = leader_trait_ruler_psionic
			}
			governor = {
				add_trait = leader_trait_governor_psionic
				add_ruler_trait = leader_trait_ruler_psionic
			}
			scientist = {
				add_trait = leader_trait_scientist_psionic
				add_ruler_trait = leader_trait_ruler_psionic
			}
			ruler = {
				add_trait = leader_trait_ruler_psionic
			}
		}
	}
}

# for planet
hfe_effect_convert_to_asteroid = {
	#log = "converting to asteroid [this.GetName]"
	# flee fleets
	if = {
		limit = {
			exists = owner
			owner = {
				is_country_type = hfe_pirate
				num_owned_planets = 1
			}
		}
		owner = {
			hfe_effect_pirate_flee_fleets = yes
		}
	}
	hfe_effect_clear_buildings_and_destroy_colony = yes
	change_pc = pc_asteroid
}

# for system
hfe_effect_create_starbase = {
	if = {
		limit = {
			exists = starbase
		}
		starbase = {
			set_owner = event_target:hfe_starbase_owner
		}
	}
	else = {
		create_starbase = {
			size = starbase_outpost
			#module = shipyard
			owner = event_target:hfe_starbase_owner
		}
	}
}

# for planet
hfe_effect_create_starbase_outpost_from_planet = {
	owner = {
		save_event_target_as = hfe_starbase_owner
	}
	solar_system = {
		hfe_effect_create_starbase = yes
	}
}

hfe_effect_create_starbase_starport_from_planet = {
	owner = {
		save_event_target_as = hfe_starbase_owner
	}
	solar_system = {
		hfe_effect_create_starbase = yes
		starbase = {
			set_starbase_size = starbase_starport
		}
	}
}

hfe_effect_create_starbase_starhold_from_planet = {
	owner = {
		save_event_target_as = hfe_starbase_owner
	}
	solar_system = {
		hfe_effect_create_starbase = yes
		starbase = {
			set_starbase_size = starbase_starhold
		}
	}
}

hfe_effect_create_starbase_starfortress_from_planet = {
	owner = {
		save_event_target_as = hfe_starbase_owner
	}
	solar_system = {
		hfe_effect_create_starbase = yes
		starbase = {
			set_starbase_size = starbase_starfortress
		}
	}
}

hfe_effect_create_starbase_citadel_from_planet = {
	owner = {
		save_event_target_as = hfe_starbase_owner
	}
	solar_system = {
		hfe_effect_create_starbase = yes
		starbase = {
			set_starbase_size = starbase_citadel
		}
	}
}

hfe_effect_create_starbase_citadel_with_buildings_from_planet = {
	owner = {
		save_event_target_as = hfe_starbase_owner
	}
	solar_system = {
		#hfe_effect_create_starbase = yes
		create_starbase = {
			size = starbase_citadel
			owner = event_target:hfe_starbase_owner
			module = shipyard
			module = shipyard
			module = shipyard
			module = hangar_bay
			module = gun_battery
			module = gun_battery
			building = target_uplink_computer
			building = defense_grid
			building = colossus_yards
			building = titan_yards
			effect = {
			}
		}
	}
}

hfe_effect_starbase_add_shipyard_0 = {
	starbase = {
		set_starbase_module = {
			slot = 0
			module = shipyard
		}
	}
}

# for starbase
hfe_effect_create_starbase_upgrade = {
	owner = {
		switch = {
			trigger = has_technology
			tech_starbase_5 = {
				prev = {
					set_starbase_size = starbase_citadel
				}
			}
			tech_starbase_4 = {
				prev = {
					set_starbase_size = starbase_starfortress
				}
			}
			tech_starbase_3 = {
				prev = {
					set_starbase_size = starbase_starhold
				}
			}
			tech_starbase_2 = {
				prev = {
					set_starbase_size = starbase_starport
				}
			}
		}
	}
}

# for solar system
hfe_effect_add_hyperlanes = {
	while = {
		count = 3
		random_system = {
			limit = {
				nor = {
					has_hyperlane_to = prev
					is_same_value = prev
				}
				distance = {
					source = prev
					type = euclidean
					min_distance >= 0
					max_distance <= 20
					use_bypasses = no
				}
			}
			add_hyperlane = {
				from = prev
				to = this
			}
		}
	}
	if = {
		limit = {
			not = {
				any_system = {
					has_hyperlane_to = prev
				}
			}
		}
		random_system = {
			limit = {
				not = {
					is_same_value = prev
				}
				distance = {
					source = prev
					type = euclidean
					min_distance >= 0
					max_distance <= 50
					use_bypasses = no
				}
			}
			add_hyperlane = {
				from = prev
				to = this
			}
		}
	}
}

hfe_effect_create_signal_object_for_planet = {
	create_ambient_object = {
		type = hfe_object_signal
		entity_offset_height = {
			min = -15
			max = -15
		}
	}
	last_created_ambient_object = {
		set_ambient_object_flag = hfe_signal_object
		set_ambient_object_flag = hfe_signal_object@prev
		set_location = {
			target = prev
			distance = 0
			angle = 0
		}
	}
}

hfe_effect_create_signal_object = {
	create_ambient_object = {
		type = hfe_object_signal
	}
	last_created_ambient_object = {
		set_ambient_object_flag = hfe_signal_object
		set_ambient_object_flag = hfe_signal_object@prev
		set_location = {
			target = prev
			distance = 0
			angle = 0
		}
	}
}

hfe_effect_remove_signal_object_from_this = {
	solar_system = {
		every_system_ambient_object = {
			limit = {
				has_ambient_object_flag = hfe_signal_object@prevprev
			}
			destroy_ambient_object = this
		}
	}
}

hfe_effect_remove_all_signal_object = {
	solar_system = {
		every_system_ambient_object = {
			limit = {
				has_ambient_object_flag = hfe_signal_object
			}
			destroy_ambient_object = this
		}
	}
}

hfe_effect_clear_buildings_and_destroy_colony = {
	# TODO
	#clear_buildings = yes
	destroy_colony = yes
}

hfe_effect_random_roll_flags_2_country = {
	remove_country_flag = hfe_random_0
	remove_country_flag = hfe_random_1
	random_list = {
		10 = {
			set_timed_country_flag = {
				flag = hfe_random_0
				days = 1
			}
		}
		10 = {
			set_timed_country_flag = {
				flag = hfe_random_1
				days = 1
			}
		}
	}
}

hfe_effect_random_roll_flags_3_country = {
	remove_country_flag = hfe_random_0
	remove_country_flag = hfe_random_1
	remove_country_flag = hfe_random_2
	random_list = {
		10 = {
			set_timed_country_flag = {
				flag = hfe_random_0
				days = 1
			}
		}
		10 = {
			set_timed_country_flag = {
				flag = hfe_random_1
				days = 1
			}
		}
		10 = {
			set_timed_country_flag = {
				flag = hfe_random_2
				days = 1
			}
		}
	}
}

hfe_effect_random_roll_flags_4_country = {
	remove_country_flag = hfe_random_0
	remove_country_flag = hfe_random_1
	remove_country_flag = hfe_random_2
	remove_country_flag = hfe_random_3
	random_list = {
		10 = {
			set_timed_country_flag = {
				flag = hfe_random_0
				days = 1
			}
		}
		10 = {
			set_timed_country_flag = {
				flag = hfe_random_1
				days = 1
			}
		}
		10 = {
			set_timed_country_flag = {
				flag = hfe_random_2
				days = 1
			}
		}
		10 = {
			set_timed_country_flag = {
				flag = hfe_random_3
				days = 1
			}
		}
	}
}

hfe_effect_random_roll_flags_5_country = {
	remove_country_flag = hfe_random_0
	remove_country_flag = hfe_random_1
	remove_country_flag = hfe_random_2
	remove_country_flag = hfe_random_3
	remove_country_flag = hfe_random_4
	random_list = {
		10 = {
			set_timed_country_flag = {
				flag = hfe_random_0
				days = 1
			}
		}
		10 = {
			set_timed_country_flag = {
				flag = hfe_random_1
				days = 1
			}
		}
		10 = {
			set_timed_country_flag = {
				flag = hfe_random_2
				days = 1
			}
		}
		10 = {
			set_timed_country_flag = {
				flag = hfe_random_3
				days = 1
			}
		}
		10 = {
			set_timed_country_flag = {
				flag = hfe_random_4
				days = 1
			}
		}
	}
}

# used in create country to avoid random spawn with started civics
hfe_effect_gov_fix = {
	change_government = {
		authority = random
		civics = random
	}
	hfe_effect_gov_fix_to_hive = yes
	hfe_effect_gov_fix_from_hive = yes
	if = {
		limit = {
			not = {
				exists = ruler
			}
		}
		create_leader = {
			class = ruler
		}
	}
}

# switch to hive
hfe_effect_gov_fix_to_hive = {
	if = {
		limit = {
			host_has_dlc = "Synthetic Dawn Story Pack"
			hfe_trigger_non_sapient_robot = yes
			not = {
				has_authority = auth_machine_intelligence
			}
		}
		create_country = {
			type = default
			species = this
			ignore_initial_colony_error = yes
			ethos = {
				ethic = ethic_gestalt_consciousness
			}
			authority = auth_machine_intelligence
		}
		copy_ethos_and_authority = last_created_country
		random_list = {
			10 = {
				modifier = {
					factor = 0.1
					not = {
						any_owned_pop_species = {
							hfe_trigger_is_robot = no
						}
					}
				}
				change_government = {
					civics = {
						civic = civic_machine_servitor
						civic = random
					}
				}
			}
			10 = {
				modifier = {
					factor = 0.1
					not = {
						any_owned_pop_species = {
							hfe_trigger_is_robot = no
						}
					}
				}
				change_government = {
					civics = {
						civic = civic_machine_assimilator
						civic = random
					}
				}
			}
			10 = {
				modifier = {
					factor = 0.1
					any_owned_pop_species = {
						hfe_trigger_is_robot = no
					}
				}
				change_government = {
					civics = {
						civic = civic_machine_terminator
						civic = random
					}
				}
			}
			10 = {
				change_government = {
					civics = random
				}
			}
		}
		kill_leader = {
			type = ruler
			show_notification = no
		}
		# remove robot trait
		if = {
			limit = {
				or = {
					#TODO has_trait = trait_robotic_1
					#TODO has_trait = trait_robotic_2
				}
			}
			modify_species = {
				# TODO remove_trait = trait_robot
				add_trait = trait_machine_unit
			}
		}
		set_name = random
	}
	else_if = {
		limit = {
			host_has_dlc = "Utopia"
			has_trait = trait_hive_mind
			not = {
				has_authority = auth_hive_mind
			}
		}
		create_country = {
			type = default
			species = this
			ignore_initial_colony_error = yes
			ethos = {
				ethic = ethic_gestalt_consciousness
			}
			authority = auth_hive_mind
		}
		copy_ethos_and_authority = last_created_country
		random_list = {
			30 = {
				change_government = {
					civics = random
				}
			}
			10 = {
				change_government = {
					civics = {
						civic = civic_hive_devouring_swarm
						civic = random
					}
				}
			}
		}
		kill_leader = {
			type = ruler
			show_notification = no
		}
		set_name = random
	}
}

hfe_effect_gov_fix_from_hive = {
	if = {
		limit = {
			is_gestalt = yes
			hfe_trigger_non_sapient = no
		}
		create_country = {
			type = default
			species = this
			ignore_initial_colony_error = yes
		}
		copy_ethos_and_authority = last_created_country
		change_government = {
			civics = random
		}
		set_name = random
	}
}

hfe_effect_gov_reset_non_hive = {
	create_country = {
		type = default
		species = this
		ignore_initial_colony_error = yes
	}
	copy_ethos_and_authority = last_created_country
	change_government = {
		civics = random
	}
	set_name = random
}

hfe_effect_root_this_change_pc_to_ideal = {
	change_pc = rl_habitable_normal
	root = {
		switch = {
			trigger = ideal_planet_class
			pc_desert = {
				prev = {
					change_pc = pc_desert
				}
			}
			pc_tropical = {
				prev = {
					change_pc = pc_tropical
				}
			}
			pc_arid = {
				prev = {
					change_pc = pc_arid
				}
			}
			pc_continental = {
				prev = {
					change_pc = pc_continental
				}
			}
			pc_ocean = {
				prev = {
					change_pc = pc_ocean
				}
			}
			pc_tundra = {
				prev = {
					change_pc = pc_tundra
				}
			}
			pc_arctic = {
				prev = {
					change_pc = pc_arctic
				}
			}
			pc_alpine = {
				prev = {
					change_pc = pc_alpine
				}
			}
			pc_savannah = {
				prev = {
					change_pc = pc_savannah
				}
			}
			pc_gaia = {
				prev = {
					change_pc = pc_gaia
				}
			}
			pc_nuked = {
				prev = {
					change_pc = pc_nuked
				}
			}
		}
	}
}

hfe_effect_leader_add_exp_100 = {
	if = {
		limit = {
			exists = leader
		}
		leader = {
			add_experience = 100
		}
	}
	else = {
		log = "leader not exists"
	}
}

hfe_effect_leader_add_exp_200 = {
	if = {
		limit = {
			exists = leader
		}
		leader = {
			add_experience = 200
		}
	}
	else = {
		log = "leader not exists"
	}
}

hfe_effect_this_make_overlord_of_prev = {
	if = {
		limit = {
			is_country_type = awakened_fallen_empire
		}
		if = {
			limit = {
				is_xenophile = yes
			}
			prev = {
				set_subject_of = {
					who = prev
					subject_type = signatory
				}
			}
		}
		else_if = {
			limit = {
				is_xenophobe = yes
			}
			prev = {
				set_subject_of = {
					who = prev
					subject_type = thrall
				}
			}
		}
		else_if = {
			limit = {
				is_spiritualist = yes
			}
			prev = {
				set_subject_of = {
					who = prev
					subject_type = dominion
				}
			}
		}
		else_if = {
			limit = {
				is_materialist = yes
			}
			prev = {
				set_subject_of = {
					who = prev
					subject_type = satellite
				}
			}
		}
	}
	else_if = {
		limit = {
			exists = event_target:hfe_coalition_leader
			is_country = event_target:hfe_coalition_leader
		}
		prev = {
			set_subject_of = {
				who = prev
				subject_type = hfe_vassal_future
			}
			hfe_effect_advisor_future_on = yes
		}
	}
	else_if = {
		limit = {
			exists = event_target:hfe_egypt_country
			is_country = event_target:hfe_egypt_country
		}
		prev = {
			set_subject_of = {
				who = prev
				subject_type = hfe_vassal_egypt
			}
		}
	}
	else = {
		prev = {
			set_subject_of = {
				who = prev
				subject_type = vassal
			}
		}
	}
}

# for country
hfe_effect_advisor_future_on = {
	hidden_effect = {
		if = {
			limit = {
				is_ai = no
				not = {
					has_global_flag = hfe_advisor_future_on
				}
			}
			set_global_flag = hfe_advisor_future_on
			custom_tooltip = hfe_advisor_future_on
			# lol
			random_playable_country = {
				limit = {
					is_ai = yes
				}
				set_player = prev
				prev = {
					set_player = prev
				}
			}
		}
	}
}

# assimilator
# hfe_effect_assimilator_find_pop = {
# 	# 0 all
# 	# 1 non citizen
# 	# 2 xenos
# 	# 3 slave
# 	# 4 vassal
# 	# 5 only xenos
# 	# 6 only salve
# 	# check vassal
# 	if = {
# 		limit = {
# 			is_overlord = yes
# 			or = {
# 				has_policy_flag = hfe_policies_assimilator.0
# 				has_policy_flag = hfe_policies_assimilator.1
# 				has_policy_flag = hfe_policies_assimilator.2
# 				has_policy_flag = hfe_policies_assimilator.3
# 				has_policy_flag = hfe_policies_assimilator.4
# 				has_policy_flag = hfe_policies_assimilator.8
# 			}
# 		}
# 		random_subject = {
# 			limit = {
# 				any_owned_pop = {
# 					hfe_trigger_assimilator_pop_to_move = yes
# 				}
# 			}
# 			log = "looping warning"
# 			hfe_effect_assimilator_find_pop = yes
# 		}
# 	}
# 	# check already purged
# 	if = {
# 		limit = {
# 			not = {
# 				exists = event_target:hfe_assimilator_pop_target
# 			}
# 			or = {
# 				has_policy_flag = hfe_policies_assimilator.0
# 				has_policy_flag = hfe_policies_assimilator.1
# 				has_policy_flag = hfe_policies_assimilator.2
# 				has_policy_flag = hfe_policies_assimilator.3
# 				has_policy_flag = hfe_policies_assimilator.6
# 				has_policy_flag = hfe_policies_assimilator.8
# 			}
# 		}
# 		random_owned_pop = {
# 			limit = {
# 				hfe_trigger_assimilator_pop_to_move = yes
# 				is_being_purged = yes
# 			}
# 			save_event_target_as = hfe_assimilator_pop_target
# 		}
# 	}
# 	# check slave
# 	if = {
# 		limit = {
# 			not = {
# 				exists = event_target:hfe_assimilator_pop_target
# 			}
# 			or = {
# 				has_policy_flag = hfe_policies_assimilator.0
# 				has_policy_flag = hfe_policies_assimilator.1
# 				has_policy_flag = hfe_policies_assimilator.2
# 				has_policy_flag = hfe_policies_assimilator.3
# 				has_policy_flag = hfe_policies_assimilator.6
# 				has_policy_flag = hfe_policies_assimilator.8
# 			}
# 		}
# 		random_owned_pop = {
# 			limit = {
# 				hfe_trigger_assimilator_pop_to_move = yes
# 				is_enslaved = yes
# 			}
# 			save_event_target_as = hfe_assimilator_pop_target
# 		}
# 	}
# 	# check xenos
# 	if = {
# 		limit = {
# 			not = {
# 				exists = event_target:hfe_assimilator_pop_target
# 			}
# 			or = {
# 				has_policy_flag = hfe_policies_assimilator.0
# 				has_policy_flag = hfe_policies_assimilator.1
# 				has_policy_flag = hfe_policies_assimilator.2
# 				has_policy_flag = hfe_policies_assimilator.5
# 				has_policy_flag = hfe_policies_assimilator.8
# 			}
# 		}
# 		random_owned_pop = {
# 			limit = {
# 				hfe_trigger_assimilator_pop_to_move = yes
# 				not = {
# 					is_same_species	= root
# 				}
# 			}
# 			save_event_target_as = hfe_assimilator_pop_target
# 		}
# 	}
# 	# check non citizen
# 	if = {
# 		limit = {
# 			not = {
# 				exists = event_target:hfe_assimilator_pop_target
# 			}
# 			or = {
# 				has_policy_flag = hfe_policies_assimilator.0
# 				has_policy_flag = hfe_policies_assimilator.1
# 				has_policy_flag = hfe_policies_assimilator.8
# 			}
# 		}
# 		random_owned_pop = {
# 			limit = {
# 				hfe_trigger_assimilator_pop_to_move = yes
# 				has_citizenship_rights = no
# 			}
# 			save_event_target_as = hfe_assimilator_pop_target
# 		}
# 	}
# 	# anyone
# 	if = {
# 		limit = {
# 			not = {
# 				exists = event_target:hfe_assimilator_pop_target
# 			}
# 			or = {
# 				has_policy_flag = hfe_policies_assimilator.0
# 				has_policy_flag = hfe_policies_assimilator.8
# 			}
# 		}
# 		random_owned_pop = {
# 			limit = {
# 				hfe_trigger_assimilator_pop_to_move = yes
# 			}
# 			save_event_target_as = hfe_assimilator_pop_target
# 		}
# 	}
# }

# need root.species
hfe_effect_remove_prescripted_ideal = {
	while = {
		count = 3
		closest_system = {
			limit = {
				any_system_planet = {
					not = {
						exists = owner
					}
					habitable_planet = yes
					habitability = {
						who = root.species
						value > 0.2
					}
				}
			}
			max_steps = 3
			random_system_planet = {
				limit = {
					not = {
						exists = owner
					}
					habitability = {
						who = root.species
						value > 0.2
					}
				}
				change_pc = pc_barren
			}
		}
	}
}

hfe_effect_stargate_on = {
	event_target:hfe_stargate = {
		create_ambient_object = {
			type = hfe_object_stargate_1
			location = this
		}
		last_created_ambient_object = {
			save_event_target_as = hfe_stargate
		}
		destroy_ambient_object = this
	}
}

hfe_effect_stargate_off = {
	event_target:hfe_stargate = {
		create_ambient_object = {
			type = hfe_object_stargate_0
			location = this
		}
		last_created_ambient_object = {
			save_event_target_as = hfe_stargate
		}
		destroy_ambient_object = this
	}
}

hfe_effect_stargate_add = {
	create_ambient_object = {
		type = hfe_object_stargate_0
		location = event_target:hfe_stargate_planet
	}
	last_created_ambient_object = {
		save_event_target_as = hfe_stargate
	}
}

hfe_effect_stargate_remove = {
	destroy_ambient_object = event_target:hfe_stargate
}
