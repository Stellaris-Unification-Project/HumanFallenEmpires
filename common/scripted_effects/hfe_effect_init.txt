#

# for default country, give tier tech
hfe_effect_init_give_tech_t1 = {
	if = {
		limit = {
			exists = event_target:hfe_init_placeholder_t1_tech
		}
		copy_techs_from = {
			target = event_target:hfe_init_placeholder_t1_tech
			except = {
			}
		}
	}
	else = {
		create_country = {
			type = hfe_placeholder_t1_tech
			species = this
			ignore_initial_colony_error = yes
			effect = {
				save_global_event_target_as = hfe_init_placeholder_t1_tech
			}
		}
		hfe_effect_init_give_tech_t1 = yes
	}
}

hfe_effect_init_give_tech_t2 = {
	if = {
		limit = {
			exists = event_target:hfe_init_placeholder_t2_tech
		}
		copy_techs_from = {
			target = event_target:hfe_init_placeholder_t2_tech
			except = {
			}
		}
	}
	else = {
		create_country = {
			type = hfe_placeholder_t2_tech
			species = this
			ignore_initial_colony_error = yes
			effect = {
				save_global_event_target_as = hfe_init_placeholder_t2_tech
			}
		}
		hfe_effect_init_give_tech_t2 = yes
	}
}

hfe_effect_init_give_tech_t3 = {
	if = {
		limit = {
			exists = event_target:hfe_init_placeholder_t3_tech
		}
		copy_techs_from = {
			target = event_target:hfe_init_placeholder_t3_tech
			except = {
			}
		}
	}
	else = {
		create_country = {
			type = hfe_placeholder_t3_tech
			species = this
			ignore_initial_colony_error = yes
			effect = {
				save_global_event_target_as = hfe_init_placeholder_t3_tech
			}
		}
		hfe_effect_init_give_tech_t3 = yes
	}
}

hfe_effect_init_give_tech_t4 = {
	if = {
		limit = {
			exists = event_target:hfe_init_placeholder_t4_tech
		}
		copy_techs_from = {
			target = event_target:hfe_init_placeholder_t4_tech
			except = {
			}
		}
	}
	else = {
		create_country = {
			type = hfe_placeholder_t4_tech
			species = this
			ignore_initial_colony_error = yes
			effect = {
				save_global_event_target_as = hfe_init_placeholder_t4_tech
			}
		}
		hfe_effect_init_give_tech_t4 = yes
	}
}

hfe_effect_init_give_tech_t5 = {
	if = {
		limit = {
			exists = event_target:hfe_init_placeholder_t5_tech
		}
		copy_techs_from = {
			target = event_target:hfe_init_placeholder_t5_tech
			except = {
			}
		}
	}
	else = {
		create_country = {
			type = hfe_placeholder_t5_tech
			species = this
			ignore_initial_colony_error = yes
			effect = {
				save_global_event_target_as = hfe_init_placeholder_t5_tech
			}
		}
		hfe_effect_init_give_tech_t5 = yes
	}
}

# for country make colony, need hfe_init_target
hfe_effect_init_make_colony = {
	event_target:hfe_init_target.capital_scope = {
		closest_system = {
			limit = {
				or = {
					and = {
						exists = owner
						owner = {
							is_country = event_target:hfe_init_target
						}
					}
					has_presence = no
				}
				any_system_planet = {
					habitability = {
						who = event_target:hfe_init_target.species
						value > 0.2
					}
					not = {
						exists = owner
					}
				}
			}
			random_system_planet = {
				limit = {
					habitability = {
						who = event_target:hfe_init_target.species
						value > 0.2
					}
					not = {
						exists = owner
					}
				}
				# seems broken
				# create_colony = {
				# 	owner = event_target:hfe_init_target
				# }
				set_owner = event_target:hfe_init_target
				create_pop = {
					species = owner
				}
				if = {
					limit = {
						not = {
							exists = owner
						}
					}
				#	log = "owner not exists on [this.GetName] during init event"
				}
			}
		}
	}
}

hfe_effect_init_set_pops_50 = {
	while = {
		count = 50
		create_pop = {
			species = owner
		}
	}
}

hfe_effect_init_set_pops_100 = {
	while = {
		count = 100
		create_pop = {
			species = owner
		}
	}
}

hfe_effect_init_set_all_districs = {
	while = {
		limit = {
			free_district_slots > 0
		}
		count = 100
		random_list = {
			10 = {
				modifier = {
					factor = 0
					num_free_districts = {
						type = district_city
						value = 0
					}
				}
				modifier = {
					factor = 2
					is_capital = yes
				}
				add_district = district_city
			}
			10 = {
				modifier = {
					factor = 0
					num_free_districts = {
						type = district_generator
						value = 0
					}
				}
				add_district = district_generator
			}
			10 = {
				modifier = {
					factor = 0
					num_free_districts = {
						type = district_mining
						value = 0
					}
				}
				add_district = district_mining
			}
			10 = {
				modifier = {
					factor = 0
					num_free_districts = {
						type = district_farming
						value = 0
					}
				}
				add_district = district_farming
			}
		}
	}
}

hfe_effect_init_set_all_buildings = {
	if = {
		limit = {
			#has_fully_upgraded_capital =
		}
	}
	while = {
		limit = {
			free_building_slots > 0
		}
		count = 100
		random_list = {
			10 = {
				add_building = building_research_lab_1
			}
			10 = {
				add_building = building_foundry_1
			}
			10 = {
				add_building = building_factory_1
			}
		}
	}
}

hfe_effect_init_develop_planet = {
	hfe_effect_init_set_pops_50 = yes
	hfe_effect_init_set_starbase = yes
	hfe_effect_init_set_all_buildings = yes
	hfe_effect_init_set_all_districs = yes
}

hfe_effect_init_set_starbase = {
	hfe_effect_create_starbase_outpost_from_planet = yes
	starbase = {
		hfe_effect_create_starbase_upgrade = yes
	}
}

# for country
hfe_effect_init_set_minings_stations = {
	every_system_within_border = {
		every_system_planet = {
			limit = {
				not = {
					exists = owner
				}
				has_orbital_station = no
				or = {
					has_deposit_for = shipclass_mining_station
					has_deposit_for = shipclass_research_station
				}
			}
			if = {
				limit = {
					has_deposit_for = shipclass_mining_station
				}
				create_mining_station = {
					owner = prevprevprev
				}
			}
			else = {
				create_research_station = {
					owner = prevprevprev
				}
			}
		}
	}
}

hfe_effect_init_expand_borders = {
	save_event_target_as = hfe_starbase_owner
	every_system_within_border = {
		every_neighbor_system = {
			limit = {
				not = {
					exists = owner
					any_ship_in_system = {
						exists = owner
						owner = {
							is_hostile = event_target:hfe_starbase_owner
						}
					}
				}
			}
			ignore_hyperlanes = no
			hfe_effect_create_starbase = yes
		}
	}
}

hfe_effect_init_make_fleet = {
	create_fleet_from_naval_cap = 0.2
	# create admiral?
}
