#
# hfe_effect_population_country_set_robot_pop_identity = {
# 	if = {
# 		limit = {
# 			has_trait = trait_machine_unit
# 			is_robot_pop = yes
# 			owner = {
# 				is_machine_empire = no
# 			}
# 		}
# 		every_owned_pop_species = {
# 			limit = {
# 				has_trait = trait_machine_unit
# 				is_robot_pop = yes
# 				not = {
# 					is_same_species = prev.species
# 				}
# 			}
# 			root = {
# 				modify_species = {
# 					base = prev
# 					species = prev
# 					add_trait = hfe_species_trait_test
# 				}
# 			}
# 			set_species_identity = prev.species
# 			root = {
# 				modify_species = {
# 					species = prev
# 					remove_trait = hfe_species_trait_test
# 				}
# 			}
# 		}
# 	}
# 	else_if = {
# 		limit = {
# 			has_trait = trait_mechanical
# 		}
# 		every_owned_pop_species = {
# 			limit = {
# 				has_trait = trait_mechanical
# 				not = {
# 					is_same_species = prev.species
# 				}
# 			}
# 			root = {
# 				modify_species = {
# 					base = none
# 					species = prev
# 					add_trait = hfe_species_trait_test
# 				}
# 			}
# 			set_species_identity = prev.species
# 			root = {
# 				modify_species = {
# 					species = prev
# 					remove_trait = hfe_species_trait_test
# 				}
# 			}
# 		}
# 	}
# 	else = {
# 		if = {
# 			limit = { owner = { is_machine_empire = no } }
# 			hfe_effect_population_process_robot_species_identity = yes
# 		}
# 	}
# }
hfe_effect_population_fix_robot_pop = {
	if = {
		limit = {
			has_trait = trait_machine_unit
			exists = owner
			owner = {
				is_machine_empire = no
			}
		}
		modify_species = {
			# base = prev
			remove_trait = trait_machine_unit
			add_trait = trait_mechanical
		}
		remove_modifier = pop_recently_conquered
	}
	else_if = {
		limit = {
			has_trait = trait_mechanical
			exists = owner
			owner = {
				is_machine_empire = yes
			}
		}
		modify_species = {
			# base = prev
			remove_trait = trait_mechanical
			add_trait = trait_machine_unit
		}
		remove_modifier = pop_recently_conquered
	}
}

# switch to hive
hfe_effect_gov_fix_to_hive = {
	if = {
		limit = {
			host_has_dlc = "Synthetic Dawn Story Pack"
			hfe_trigger_non_sapient_robot = yes
			not = {
				has_authority = auth_machine_intelligence
			}
		}
		create_country = {
			type = default
			species = this.species
			ignore_initial_colony_error = yes
			ethos = {
				ethic = ethic_gestalt_consciousness
			}
			authority = auth_machine_intelligence
			origin = origin_default
		}
		copy_ethos_and_authority = last_created_country
		random_list = {
			10 = {
				modifier = {
					factor = 0.5
					not = {
						any_owned_pop_species = {
							hfe_trigger_is_robot = no
						}
					}
				}
				change_government = {
					civics = {
						civic = civic_machine_servitor
						civic = random
					}
				}
			}
			10 = {
				modifier = {
					factor = 0.5
					not = {
						any_owned_pop_species = {
							hfe_trigger_is_robot = no
						}
					}
				}
				change_government = {
					civics = {
						civic = civic_machine_assimilator
						civic = random
					}
				}
			}
			1 = {
				modifier = {
					factor = 0
					any_owned_pop_species = {
						hfe_trigger_is_robot = no
					}
				}
				change_government = {
					civics = {
						civic = civic_machine_terminator
						civic = random
					}
				}
			}
			10 = {
				change_government = {
					civics = random
				}
			}
		}
		kill_leader = {
			type = ruler
			show_notification = no
		}
		# remove robot trait
		if = {
			limit = {
				has_trait = trait_mechanical
			}
			modify_species = {
				remove_trait = trait_mechanical
				add_trait = trait_machine_unit
			}
		}
		set_name = random
	}
	else_if = {
		limit = {
			host_has_dlc = "Utopia"
			has_trait = trait_hive_mind
			not = {
				has_authority = auth_hive_mind
			}
		}
		create_country = {
			type = default
			species = this.species
			ignore_initial_colony_error = yes
			ethos = {
				ethic = ethic_gestalt_consciousness
			}
			authority = auth_hive_mind
			origin = origin_default
		}
		copy_ethos_and_authority = last_created_country
		random_list = {
			9 = {
				change_government = {
					civics = random
				}
			}
			1 = {
				change_government = {
					civics = {
						civic = civic_hive_devouring_swarm
						civic = random
					}
				}
			}
		}
		kill_leader = {
			type = ruler
			show_notification = no
		}
		set_name = random
	}
}

# from hive
hfe_effect_gov_fix_from_hive = {
	if = {
		limit = {
			is_gestalt = yes
			hfe_trigger_non_sapient = no
			# in general its ok if cybernetics will be released from hive authority but not blight
			not = {
				has_valid_civic = hfe_civic_blight
			}
		}
		create_country = {
			type = default
			species = this.species
			ignore_initial_colony_error = yes
			origin = origin_default
		}
		copy_ethos_and_authority = last_created_country
		change_government = {
			civics = random
		}
		set_name = random
	}
}

# just reset
hfe_effect_gov_reset = {
	create_country = {
		type = default
		species = this
		ignore_initial_colony_error = yes
		origin = origin_default
	}
	copy_ethos_and_authority = last_created_country
	change_government = {
		civics = random
	}
	set_name = random
}

# hfe_effect_population_process_robot_species_identity = {
# 	random_owned_pop = {
# 		limit = {
# 			has_trait = trait_mechanical
# 		}
# 		save_event_target_as = hfe_robot_pop_species
# 	}
# 	every_owned_pop_species = {
# 		limit = {
# 			has_trait = trait_mechanical
# 			exists = event_target:hfe_robot_pop_species
# 			not = {
# 				is_same_species = event_target:hfe_robot_pop_species
# 			}
# 		}
# 		root = {
# 			modify_species = {
# 				base = none
# 				species = prev
# 				add_trait = hfe_species_trait_test
# 			}
# 		}
# 		#		set_species_identity = prev.species
# 		set_species_identity = prev
# 		root = {
# 			modify_species = {
# 				species = prev
# 				remove_trait = hfe_species_trait_test
# 			}
# 		}
# 	}
# }
hfe_effect_population_remove_object_shield_global = {
	every_ambient_object = {
		limit = {
			has_ambient_object_flag = hfe_population_object_shield
		}
		destroy_ambient_object = this
	}
}
