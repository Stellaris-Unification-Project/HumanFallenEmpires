# pirate

# for country
human_fallen_empires_effect_pirate_diplomacy_remove_flags = {
	remove_country_flag = human_fallen_empires_pirate.101.raid_menu
	remove_country_flag = human_fallen_empires_pirate.101.traid_menu
	remove_country_flag = human_fallen_empires_pirate.101.deal_offer
	remove_country_flag = human_fallen_empires_pirate.101.slave_menu
	remove_country_flag = human_fallen_empires_pirate.101.service_menu
	remove_country_flag = human_fallen_empires_pirate.101.psi_test_menu
	remove_country_flag = human_fallen_empires_pirate.101.casino_menu
	remove_country_flag = human_fallen_empires_pirate.101.casino_menu.challenge
}

# create pirate
# return event target pirate_band, need event target human_fallen_empires_pirate_target
human_fallen_empires_effect_pirate_init = {
	event_target:human_fallen_empires_pirate_target = {
		set_timed_country_flag = {
			flag = human_fallen_empires_pirate_spawned
			days = @human_fallen_empires_pirate_spawn_cooldown
		}
		random_system = {
			limit = {
				distance_to_empire = {
					who = event_target:human_fallen_empires_pirate_target
					distance <= 150
				}
				human_fallen_empires_pirate_valid_base_system = yes
			}
			# for vanilla localization
			save_event_target_as = pirate_system
			human_fallen_empires_effect_pirate_init_country = yes
			human_fallen_empires_effect_pirate_init_base = yes
		}
		if = {
			limit = {
				not = {
					has_event_chain = human_fallen_empires_chain_pirate_count
				}
			}
			begin_event_chain = {
				event_chain = human_fallen_empires_chain_pirate_count
				target = this
			}
			set_country_flag = human_fallen_empires_birth_of_piracy
			set_country_flag = pirate_encountered
			set_country_flag = birth_of_piracy
			country_event = {
				id = human_fallen_empires_pirate.1
				days = 1
				random = 15
			}
		}
		else = {
			country_event = {
				id = human_fallen_empires_pirate.7
				days = 1
				random = 15
			}
		}
	}
}

# for system, asteroid ideally, need event target pirate_band
human_fallen_empires_effect_pirate_init_base = {
	random_system_planet = {
		limit = {
			human_fallen_empires_pirate_valid_base_planet = yes
			exists = orbital_deposit_tile
			orbital_deposit_tile = {
				has_deposit = no
			}
		}
		save_global_event_target_as = human_fallen_empires_pirate_base
	}
	if = {
		limit = {
			not = {
				exists = event_target:human_fallen_empires_pirate_base
			}
		}
		random_system_planet = {
			limit = {
				human_fallen_empires_pirate_valid_base_planet = yes
			}
			save_global_event_target_as = human_fallen_empires_pirate_base
		}
	}
	if = {
		limit = {
			exists = event_target:human_fallen_empires_pirate_base
		}
		event_target:human_fallen_empires_pirate_base = {
			change_pc = human_fallen_empires_pc_pirate_base
			if = {
				limit = {
					not = {
						is_planet_class = human_fallen_empires_pc_pirate_base
					}
				}
				log = "wrong planet class while init pirate base [this.GetName] system: [solar_system.GetName]"
			}
			create_colony = {
				owner = event_target:human_fallen_empires_pirate_clan
			}
			every_owned_pop = {
				kill_pop = yes
			}
			#set_owner = event_target:human_fallen_empires_pirate_clan
			if = {
			 	limit = {
			 		not = {
			 			exists = owner
			 		}
			 	}
			 	#set_owner = event_target:human_fallen_empires_pirate_clan
			 	log = "owner not exists [this.GetName] system: [solar_system.GetName]"
			}
			#log = "pirate created new base [this.GetName] in [solar_system.GetName] system, owner: [owner.GetName]"
			#set_planet_flag = human_fallen_empires_pirate_base
			human_fallen_empires_effect_create_starbase_starport_from_planet = yes
			human_fallen_empires_effect_starbase_add_shipyard_0 = yes
			clear_global_event_target = human_fallen_empires_pirate_base
		}
	}
	else = {
		log = "cant find planet for pirate base, whats happen? system: [this.GetName]"
	}
}

human_fallen_empires_effect_pirate_init_country = {
	create_country = {
		type = human_fallen_empires_pirate
		species = event_target:human_fallen_empires_pirate_target
		name_list = human_fallen_empires_pirate_namelist
		released_from_country = event_target:human_fallen_empires_pirate_target
		#ignore_initial_colony_error = yes
		effect = {
			human_fallen_empires_effect_gov_fix = yes
			change_country_flag = {
				icon = {
					category = zoological
					file = flag_zoological_1.dds
				}
				background= {
					category = backgrounds
					file = 00_solid.dds
				}
				colors = {
					dark_grey
					dark_grey
					null
					null
				}
			}
			randomize_flag_symbol = pirate
			add_modifier = {
				modifier = human_fallen_empires_pirate_country_unkeep
			}
			set_graphical_culture = human_fallen_empires_graphical_culture_pirate
			add_energy = 500
			if = {
				limit = {
					years_passed > 60
				}
				add_minerals = 10000
				add_modifier = {
					modifier = human_fallen_empires_pirate_country_boost
					days = 3650
				}
			}
			else_if = {
				limit = {
					years_passed > 40
				}
				add_minerals = 5000
				add_modifier = {
					modifier = human_fallen_empires_pirate_country_boost
					days = 1825
				}
			}
			else = {
				add_minerals = 1000
				add_modifier = {
					modifier = human_fallen_empires_pirate_country_boost
					days = 365
				}
			}
			set_relation_flag = {
				who = event_target:human_fallen_empires_pirate_target
				flag = pirate_relation
			}
			if = {
				limit = {
					has_ethic = ethic_pacifist
				}
				country_remove_ethic = ethic_pacifist
				country_add_ethic = ethic_militarist
			}
			else_if = {
				limit = {
					has_ethic = ethic_fanatic_pacifist
				}
				country_remove_ethic = ethic_fanatic_pacifist
				country_add_ethic = ethic_fanatic_militarist
			}
			save_event_target_as = human_fallen_empires_pirate_clan
			# for vanilla localization
			save_event_target_as = pirate_band
			every_country = {
				limit = {
					is_country_type = primitive
				}
				establish_communications_no_message = prev
				prev = {
					if = {
						limit = {
							is_xenophobe = no
						}
					}
					set_faction_hostility = {
						target = prev
						set_hostile = no
						set_neutral = yes
						set_friendly = no
					}
				}
			}
			every_country = {
				limit = {
					is_country_type = enclave
				}
				set_faction_hostility = {
					target = prev
					set_hostile = no
					set_neutral = yes
					set_friendly = no
				}
			}
			while = {
				count = 4
				create_leader = {
					type = scientist
				}
			}
			create_leader = {
				type = admiral
			}
			create_leader = {
				type = ruler
			}
			assign_leader = last_created_leader
			event_target:human_fallen_empires_pirate_target = {
				if = {
					limit = {
						has_event_chain = human_fallen_empires_chain_pirate_count
					}
					add_event_chain_counter = {
						event_chain = human_fallen_empires_chain_pirate_count
						counter = human_fallen_empires_chain_pirate_count_clan
						amount = 1
					}
				}
			}
		}
	}
}

# for country, return 6 event targets of not same species
human_fallen_empires_effect_save_slave_target = {
	every_owned_pop = {
		if = {
			limit = {
				exists = event_target:human_fallen_empires_slave_target_5
			}
		}
		else_if = {
			limit = {
				not = {
					exists = event_target:human_fallen_empires_slave_target_0
				}
			}
			save_event_target_as = human_fallen_empires_slave_target_0
		}
		else_if = {
			limit = {
				nor = {
					is_exact_same_species = event_target:human_fallen_empires_slave_target_0
					exists = event_target:human_fallen_empires_slave_target_1
				}
			}
			save_event_target_as = human_fallen_empires_slave_target_1
		}
		else_if = {
			limit = {
				nor = {
					is_exact_same_species = event_target:human_fallen_empires_slave_target_0
					is_exact_same_species = event_target:human_fallen_empires_slave_target_1
					exists = event_target:human_fallen_empires_slave_target_2
				}
			}
			save_event_target_as = human_fallen_empires_slave_target_2
		}
		else_if = {
			limit = {
				nor = {
					is_exact_same_species = event_target:human_fallen_empires_slave_target_0
					is_exact_same_species = event_target:human_fallen_empires_slave_target_1
					is_exact_same_species = event_target:human_fallen_empires_slave_target_2
					exists = event_target:human_fallen_empires_slave_target_3
				}
			}
			save_event_target_as = human_fallen_empires_slave_target_3
		}
		else_if = {
			limit = {
				nor = {
					is_exact_same_species = event_target:human_fallen_empires_slave_target_0
					is_exact_same_species = event_target:human_fallen_empires_slave_target_1
					is_exact_same_species = event_target:human_fallen_empires_slave_target_2
					is_exact_same_species = event_target:human_fallen_empires_slave_target_3
					exists = event_target:human_fallen_empires_slave_target_4
				}
			}
			save_event_target_as = human_fallen_empires_slave_target_4
		}
		else_if = {
			limit = {
				nor = {
					is_exact_same_species = event_target:human_fallen_empires_slave_target_0
					is_exact_same_species = event_target:human_fallen_empires_slave_target_1
					is_exact_same_species = event_target:human_fallen_empires_slave_target_2
					is_exact_same_species = event_target:human_fallen_empires_slave_target_3
					is_exact_same_species = event_target:human_fallen_empires_slave_target_4
					exists = event_target:human_fallen_empires_slave_target_5
				}
			}
			save_event_target_as = human_fallen_empires_slave_target_5
		}
	}
}

# this planet, from bombarder
human_fallen_empires_effect_pirate_ravage_planet = {
	random_tile = {
		limit = {
			has_building = yes
			is_ruined = no
		}
		set_ruined = yes
		# протестить можно ли просто фром
		from = {
			add_minerals = 50
			add_energy = 10
			add_physics_research = 5
			add_society_research = 5
			add_engineering_research = 5
		}
	}
	if = {
		limit = {
			from = {
				any_owned_planet = {
					free_pop_tiles > 0
				}
			}
		}
		random_owned_pop = {
			limit = {
				is_growing = no
				is_sapient = yes
			}
			save_event_target_as = human_fallen_empires_settle_pop_target
		}
		from = {
			human_fallen_empires_effect_settle_pop = yes
		}
	}
	add_modifier = {
		modifier = human_fallen_empires_pirate_ravaged_planet
		days = @human_fallen_empires_pirate_ravaged_planet_time
	}
	owner = {
		if = {
			limit = {
				has_event_chain = human_fallen_empires_chain_pirate_count
			}
			add_event_chain_counter = {
				event_chain = human_fallen_empires_chain_pirate_count
				counter = human_fallen_empires_chain_pirate_count_planet_ravaged
				amount = 1
			}
		}
	}
}

human_fallen_empires_effect_pirate_resource_reward = {
	add_minerals = 90
	add_energy = 10
	add_physics_research = 5
	add_society_research = 5
	add_engineering_research = 5
}

human_fallen_empires_effect_pirate_attack_count_check = {
	if = {
		limit = {
			check_variable = {
				which = human_fallen_empires_pirate_attack_count
				value > 10
			}
		}
		set_variable = {
			which = human_fallen_empires_pirate_attack_count
			value = 0
		}
		random_country = {
			limit = {
				has_country_flag = human_fallen_empires_pirate_attack_count@prev
			}
			save_event_target_as = human_fallen_empires_pirate_country
		}
		country_event = {
			id = human_fallen_empires_pirate.200
			days = 1
			random = 30
		}
	}
}

# for country
human_fallen_empires_effect_pirate_flee_fleets = {
	random_country = {
		limit = {
			is_country_type = human_fallen_empires_pirate
			not = {
				is_country = prev
			}
		}
		prev = {
			every_owned_fleet = {
				limit = {
					is_ship_class = shipclass_military
				}
				set_owner = prevprev
				log = "[this.GetName] flee to [owner.GetName] from [prev.GetName]"
			}
		}
	}
}
